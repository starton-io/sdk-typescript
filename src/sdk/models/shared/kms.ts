/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class Credentials extends SpeakeasyBase {}

export class KmsMetadata extends SpeakeasyBase {}

export enum KmsProvider {
    Aws = "AWS",
    Vault = "Vault",
}

export class Wallets extends SpeakeasyBase {}

export class Kms extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "credentials" })
    @Type(() => Credentials)
    credentials: Credentials;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    @Type(() => KmsMetadata)
    metadata?: KmsMetadata;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "projectId" })
    projectId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "provider" })
    provider: KmsProvider;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "wallets" })
    @Type(() => Wallets)
    wallets?: Wallets;
}
