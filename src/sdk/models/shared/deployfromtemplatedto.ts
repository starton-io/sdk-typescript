/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomGasDto } from "./customgasdto";
import { Expose, Type } from "class-transformer";

/**
 * Gas Speed, by default on average, could be set at custom.
 */
export enum DeployFromTemplateDtoSpeed {
    Low = "low",
    Average = "average",
    Fast = "fast",
    Fastest = "fastest",
    Custom = "custom",
}

export class DeployFromTemplateDto extends SpeakeasyBase {
    /**
     * Custom gas settings for deploy transaction, will be used if speed set to custom
     */
    @SpeakeasyMetadata()
    @Expose({ name: "customGas" })
    @Type(() => CustomGasDto)
    customGas?: CustomGasDto;

    /**
     * Contract description on Starton database (off-chain).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * Optional gas limit
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gasLimit" })
    gasLimit?: string;

    /**
     * Contract name on Starton database (off-chain).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * Network of the smart contract you want to deploy.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "network" })
    network: string;

    /**
     * Nonce manual setting, if nonce referenced, Starton relayer will not automaticly assign nonce.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "nonce" })
    nonce?: number;

    /**
     * Smart contract constructor parameters.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "params" })
    params: any[];

    /**
     * Signer wallet of the transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "signerWallet" })
    signerWallet: string;

    /**
     * Gas Speed, by default on average, could be set at custom.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "speed" })
    speed?: DeployFromTemplateDtoSpeed;

    /**
     * Starton Library template to deploy.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "templateId" })
    templateId: string;

    /**
     * If you want to put value in your smart contract deployment (Example: payable constructor)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}
