/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Rpc = {
    createdAt?: Date | undefined;
    id: string;
    networkName: string;
    updatedAt?: Date | undefined;
    url: string;
};

/** @internal */
export namespace Rpc$ {
    export type Inbound = {
        createdAt?: string | undefined;
        id: string;
        networkName: string;
        updatedAt?: string | undefined;
        url: string;
    };

    export const inboundSchema: z.ZodType<Rpc, z.ZodTypeDef, Inbound> = z
        .object({
            createdAt: z
                .string()
                .datetime({ offset: true })
                .default("2024-01-31T13:57:36.269Z")
                .transform((v) => new Date(v)),
            id: z.string(),
            networkName: z.string(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .default("2024-01-31T13:57:36.269Z")
                .transform((v) => new Date(v)),
            url: z.string(),
        })
        .transform((v) => {
            return {
                createdAt: v.createdAt,
                id: v.id,
                networkName: v.networkName,
                updatedAt: v.updatedAt,
                url: v.url,
            };
        });

    export type Outbound = {
        createdAt: string;
        id: string;
        networkName: string;
        updatedAt: string;
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Rpc> = z
        .object({
            createdAt: z
                .date()
                .default(() => new Date("2024-01-31T13:57:36.269Z"))
                .transform((v) => v.toISOString()),
            id: z.string(),
            networkName: z.string(),
            updatedAt: z
                .date()
                .default(() => new Date("2024-01-31T13:57:36.269Z"))
                .transform((v) => v.toISOString()),
            url: z.string(),
        })
        .transform((v) => {
            return {
                createdAt: v.createdAt,
                id: v.id,
                networkName: v.networkName,
                updatedAt: v.updatedAt,
                url: v.url,
            };
        });
}
