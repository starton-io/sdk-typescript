/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SignMessageDto = {
  message: string;
};

/** @internal */
export const SignMessageDto$inboundSchema: z.ZodType<
  SignMessageDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type SignMessageDto$Outbound = {
  message: string;
};

/** @internal */
export const SignMessageDto$outboundSchema: z.ZodType<
  SignMessageDto$Outbound,
  z.ZodTypeDef,
  SignMessageDto
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SignMessageDto$ {
  /** @deprecated use `SignMessageDto$inboundSchema` instead. */
  export const inboundSchema = SignMessageDto$inboundSchema;
  /** @deprecated use `SignMessageDto$outboundSchema` instead. */
  export const outboundSchema = SignMessageDto$outboundSchema;
  /** @deprecated use `SignMessageDto$Outbound` instead. */
  export type Outbound = SignMessageDto$Outbound;
}
