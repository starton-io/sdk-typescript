/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type VaultKmsCredentialsDto = {
    /**
     * Vault base url
     */
    baseUrl: string;
    /**
     * Will be generated by starton
     */
    id: string;
    /**
     * URL that will give you a jwt to use the plugin
     */
    loginPath: string;
    /**
     * Role from vault app-role
     */
    role: string;
    /**
     * URL that will be used for your plugin
     */
    rootPath: string;
    /**
     * Check if the ssl certificate is self signed
     */
    selfSigned: boolean;
    timeout: number;
    /**
     * URL that will allow you to interact with the token
     */
    tokenPath: string;
};

/** @internal */
export namespace VaultKmsCredentialsDto$ {
    export type Inbound = {
        baseUrl: string;
        id: string;
        loginPath: string;
        role: string;
        rootPath: string;
        selfSigned: boolean;
        timeout: number;
        tokenPath: string;
    };

    export const inboundSchema: z.ZodType<VaultKmsCredentialsDto, z.ZodTypeDef, Inbound> = z
        .object({
            baseUrl: z.string(),
            id: z.string(),
            loginPath: z.string(),
            role: z.string(),
            rootPath: z.string(),
            selfSigned: z.boolean(),
            timeout: z.number(),
            tokenPath: z.string(),
        })
        .transform((v) => {
            return {
                baseUrl: v.baseUrl,
                id: v.id,
                loginPath: v.loginPath,
                role: v.role,
                rootPath: v.rootPath,
                selfSigned: v.selfSigned,
                timeout: v.timeout,
                tokenPath: v.tokenPath,
            };
        });

    export type Outbound = {
        baseUrl: string;
        id: string;
        loginPath: string;
        role: string;
        rootPath: string;
        selfSigned: boolean;
        timeout: number;
        tokenPath: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, VaultKmsCredentialsDto> = z
        .object({
            baseUrl: z.string(),
            id: z.string(),
            loginPath: z.string(),
            role: z.string(),
            rootPath: z.string(),
            selfSigned: z.boolean(),
            timeout: z.number(),
            tokenPath: z.string(),
        })
        .transform((v) => {
            return {
                baseUrl: v.baseUrl,
                id: v.id,
                loginPath: v.loginPath,
                role: v.role,
                rootPath: v.rootPath,
                selfSigned: v.selfSigned,
                timeout: v.timeout,
                tokenPath: v.tokenPath,
            };
        });
}
