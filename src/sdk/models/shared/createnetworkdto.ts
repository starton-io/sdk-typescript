/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ExplorerApiDto, ExplorerApiDto$ } from "./explorerapidto.js";
import {
    GasPriceRecommendationDto,
    GasPriceRecommendationDto$,
} from "./gaspricerecommendationdto.js";
import * as z from "zod";

export type CreateNetworkDto = {
    blockchain: string;
    chainId: number;
    confirmationBlocks: number;
    decimal?: number | undefined;
    displayName: string;
    eip1159?: boolean | undefined;
    enableExternalWallet?: boolean | undefined;
    enableListener?: boolean | undefined;
    enableRelayer?: boolean | undefined;
    explorerApi?: ExplorerApiDto | undefined;
    explorerUrl?: string | undefined;
    faucetUrl?: string | undefined;
    gasPriceRecommendation?: GasPriceRecommendationDto | undefined;
    loadbalancerUrl?: string | undefined;
    logo: string;
    name: string;
    symbol: string;
    tenantHostnames?: Array<string> | undefined;
    testnet?: boolean | undefined;
    verifyBlockIntegrity?: boolean | undefined;
    verifyTxIntegrity?: boolean | undefined;
};

/** @internal */
export namespace CreateNetworkDto$ {
    export const inboundSchema: z.ZodType<CreateNetworkDto, z.ZodTypeDef, unknown> = z.object({
        blockchain: z.string(),
        chainId: z.number(),
        confirmationBlocks: z.number(),
        decimal: z.number().optional(),
        displayName: z.string(),
        eip1159: z.boolean().optional(),
        enableExternalWallet: z.boolean().optional(),
        enableListener: z.boolean().optional(),
        enableRelayer: z.boolean().optional(),
        explorerApi: ExplorerApiDto$.inboundSchema.optional(),
        explorerUrl: z.string().optional(),
        faucetUrl: z.string().optional(),
        gasPriceRecommendation: GasPriceRecommendationDto$.inboundSchema.optional(),
        loadbalancerUrl: z.string().optional(),
        logo: z.string(),
        name: z.string(),
        symbol: z.string(),
        tenantHostnames: z.array(z.string()).optional(),
        testnet: z.boolean().optional(),
        verifyBlockIntegrity: z.boolean().optional(),
        verifyTxIntegrity: z.boolean().optional(),
    });

    export type Outbound = {
        blockchain: string;
        chainId: number;
        confirmationBlocks: number;
        decimal?: number | undefined;
        displayName: string;
        eip1159?: boolean | undefined;
        enableExternalWallet?: boolean | undefined;
        enableListener?: boolean | undefined;
        enableRelayer?: boolean | undefined;
        explorerApi?: ExplorerApiDto$.Outbound | undefined;
        explorerUrl?: string | undefined;
        faucetUrl?: string | undefined;
        gasPriceRecommendation?: GasPriceRecommendationDto$.Outbound | undefined;
        loadbalancerUrl?: string | undefined;
        logo: string;
        name: string;
        symbol: string;
        tenantHostnames?: Array<string> | undefined;
        testnet?: boolean | undefined;
        verifyBlockIntegrity?: boolean | undefined;
        verifyTxIntegrity?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateNetworkDto> = z.object({
        blockchain: z.string(),
        chainId: z.number(),
        confirmationBlocks: z.number(),
        decimal: z.number().optional(),
        displayName: z.string(),
        eip1159: z.boolean().optional(),
        enableExternalWallet: z.boolean().optional(),
        enableListener: z.boolean().optional(),
        enableRelayer: z.boolean().optional(),
        explorerApi: ExplorerApiDto$.outboundSchema.optional(),
        explorerUrl: z.string().optional(),
        faucetUrl: z.string().optional(),
        gasPriceRecommendation: GasPriceRecommendationDto$.outboundSchema.optional(),
        loadbalancerUrl: z.string().optional(),
        logo: z.string(),
        name: z.string(),
        symbol: z.string(),
        tenantHostnames: z.array(z.string()).optional(),
        testnet: z.boolean().optional(),
        verifyBlockIntegrity: z.boolean().optional(),
        verifyTxIntegrity: z.boolean().optional(),
    });
}
