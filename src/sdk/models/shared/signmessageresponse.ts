/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SignMessageResponse = {
  signature: string;
};

/** @internal */
export const SignMessageResponse$inboundSchema: z.ZodType<
  SignMessageResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  signature: z.string(),
});

/** @internal */
export type SignMessageResponse$Outbound = {
  signature: string;
};

/** @internal */
export const SignMessageResponse$outboundSchema: z.ZodType<
  SignMessageResponse$Outbound,
  z.ZodTypeDef,
  SignMessageResponse
> = z.object({
  signature: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SignMessageResponse$ {
  /** @deprecated use `SignMessageResponse$inboundSchema` instead. */
  export const inboundSchema = SignMessageResponse$inboundSchema;
  /** @deprecated use `SignMessageResponse$outboundSchema` instead. */
  export const outboundSchema = SignMessageResponse$outboundSchema;
  /** @deprecated use `SignMessageResponse$Outbound` instead. */
  export type Outbound = SignMessageResponse$Outbound;
}
