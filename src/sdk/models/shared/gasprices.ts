/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { GasPriceInfo, GasPriceInfo$ } from "./gaspriceinfo";
import * as z from "zod";

export type GasPrices = {
    /**
     * average gas price for network
     */
    average: GasPriceInfo;
    /**
     * fast gas price for network
     */
    fast: GasPriceInfo;
    /**
     * fastest gas price for network
     */
    fastest: GasPriceInfo;
    /**
     * low gas price for network
     */
    low: GasPriceInfo;
};

/** @internal */
export namespace GasPrices$ {
    export const inboundSchema: z.ZodType<GasPrices, z.ZodTypeDef, unknown> = z
        .object({
            average: GasPriceInfo$.inboundSchema,
            fast: GasPriceInfo$.inboundSchema,
            fastest: GasPriceInfo$.inboundSchema,
            low: GasPriceInfo$.inboundSchema,
        })
        .transform((v) => {
            return {
                average: v.average,
                fast: v.fast,
                fastest: v.fastest,
                low: v.low,
            };
        });

    export type Outbound = {
        average: GasPriceInfo$.Outbound;
        fast: GasPriceInfo$.Outbound;
        fastest: GasPriceInfo$.Outbound;
        low: GasPriceInfo$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GasPrices> = z
        .object({
            average: GasPriceInfo$.outboundSchema,
            fast: GasPriceInfo$.outboundSchema,
            fastest: GasPriceInfo$.outboundSchema,
            low: GasPriceInfo$.outboundSchema,
        })
        .transform((v) => {
            return {
                average: v.average,
                fast: v.fast,
                fastest: v.fastest,
                low: v.low,
            };
        });
}
