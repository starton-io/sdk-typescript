/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type AbiOutputDtoComponents = {};

export type AbiOutputDto = {
    components?: AbiOutputDtoComponents | undefined;
    internalType?: string | undefined;
    name: string;
    type: string;
};

/** @internal */
export namespace AbiOutputDtoComponents$ {
    export const inboundSchema: z.ZodType<AbiOutputDtoComponents, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AbiOutputDtoComponents> =
        z.object({});
}

/** @internal */
export namespace AbiOutputDto$ {
    export const inboundSchema: z.ZodType<AbiOutputDto, z.ZodTypeDef, unknown> = z.object({
        components: z.lazy(() => AbiOutputDtoComponents$.inboundSchema).optional(),
        internalType: z.string().optional(),
        name: z.string(),
        type: z.string(),
    });

    export type Outbound = {
        components?: AbiOutputDtoComponents$.Outbound | undefined;
        internalType?: string | undefined;
        name: string;
        type: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AbiOutputDto> = z.object({
        components: z.lazy(() => AbiOutputDtoComponents$.outboundSchema).optional(),
        internalType: z.string().optional(),
        name: z.string(),
        type: z.string(),
    });
}
