/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { DirectoryContent, DirectoryContent$ } from "./directorycontent.js";
import * as z from "zod";

export type PinMetadata = {};

export enum Status {
    Queued = "queued",
    Pinning = "pinning",
    Pinned = "pinned",
    Failed = "failed",
    Deleted = "deleted",
}

export enum PinType {
    Directory = "directory",
    File = "file",
}

export type Pin = {
    cid?: string | null | undefined;
    createdAt?: Date | undefined;
    delegates?: Array<string> | null | undefined;
    directoryContent?: Array<DirectoryContent> | null | undefined;
    id: string;
    metadata?: PinMetadata | null | undefined;
    name?: string | null | undefined;
    origins?: Array<string> | null | undefined;
    projectId: string;
    size?: number | null | undefined;
    status: Status;
    type?: PinType | null | undefined;
    updatedAt?: Date | undefined;
};

/** @internal */
export namespace PinMetadata$ {
    export const inboundSchema: z.ZodType<PinMetadata, z.ZodTypeDef, unknown> = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PinMetadata> = z.object({});
}

/** @internal */
export namespace Status$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Status> = z.nativeEnum(Status);
    export const outboundSchema: z.ZodNativeEnum<typeof Status> = inboundSchema;
}

/** @internal */
export namespace PinType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof PinType> = z.nativeEnum(PinType);
    export const outboundSchema: z.ZodNativeEnum<typeof PinType> = inboundSchema;
}

/** @internal */
export namespace Pin$ {
    export const inboundSchema: z.ZodType<Pin, z.ZodTypeDef, unknown> = z.object({
        cid: z.nullable(z.string()).optional(),
        createdAt: z
            .string()
            .datetime({ offset: true })
            .default("2024-05-02T09:33:57.821Z")
            .transform((v) => new Date(v)),
        delegates: z.nullable(z.array(z.string())).optional(),
        directoryContent: z.nullable(z.array(DirectoryContent$.inboundSchema)).optional(),
        id: z.string(),
        metadata: z.nullable(z.lazy(() => PinMetadata$.inboundSchema)).optional(),
        name: z.nullable(z.string()).optional(),
        origins: z.nullable(z.array(z.string())).optional(),
        projectId: z.string(),
        size: z.nullable(z.number()).optional(),
        status: Status$.inboundSchema,
        type: z.nullable(PinType$.inboundSchema).optional(),
        updatedAt: z
            .string()
            .datetime({ offset: true })
            .default("2024-05-02T09:33:57.821Z")
            .transform((v) => new Date(v)),
    });

    export type Outbound = {
        cid?: string | null | undefined;
        createdAt: string;
        delegates?: Array<string> | null | undefined;
        directoryContent?: Array<DirectoryContent$.Outbound> | null | undefined;
        id: string;
        metadata?: PinMetadata$.Outbound | null | undefined;
        name?: string | null | undefined;
        origins?: Array<string> | null | undefined;
        projectId: string;
        size?: number | null | undefined;
        status: string;
        type?: string | null | undefined;
        updatedAt: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Pin> = z.object({
        cid: z.nullable(z.string()).optional(),
        createdAt: z
            .date()
            .default(() => new Date("2024-05-02T09:33:57.821Z"))
            .transform((v) => v.toISOString()),
        delegates: z.nullable(z.array(z.string())).optional(),
        directoryContent: z.nullable(z.array(DirectoryContent$.outboundSchema)).optional(),
        id: z.string(),
        metadata: z.nullable(z.lazy(() => PinMetadata$.outboundSchema)).optional(),
        name: z.nullable(z.string()).optional(),
        origins: z.nullable(z.array(z.string())).optional(),
        projectId: z.string(),
        size: z.nullable(z.number()).optional(),
        status: Status$.outboundSchema,
        type: z.nullable(PinType$.outboundSchema).optional(),
        updatedAt: z
            .date()
            .default(() => new Date("2024-05-02T09:33:57.821Z"))
            .transform((v) => v.toISOString()),
    });
}
