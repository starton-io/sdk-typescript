/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateWalletDtoMetadata = {};

export type UpdateWalletDto = {
  description?: string | undefined;
  metadata?: UpdateWalletDtoMetadata | undefined;
  name?: string | undefined;
};

/** @internal */
export const UpdateWalletDtoMetadata$inboundSchema: z.ZodType<
  UpdateWalletDtoMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UpdateWalletDtoMetadata$Outbound = {};

/** @internal */
export const UpdateWalletDtoMetadata$outboundSchema: z.ZodType<
  UpdateWalletDtoMetadata$Outbound,
  z.ZodTypeDef,
  UpdateWalletDtoMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateWalletDtoMetadata$ {
  /** @deprecated use `UpdateWalletDtoMetadata$inboundSchema` instead. */
  export const inboundSchema = UpdateWalletDtoMetadata$inboundSchema;
  /** @deprecated use `UpdateWalletDtoMetadata$outboundSchema` instead. */
  export const outboundSchema = UpdateWalletDtoMetadata$outboundSchema;
  /** @deprecated use `UpdateWalletDtoMetadata$Outbound` instead. */
  export type Outbound = UpdateWalletDtoMetadata$Outbound;
}

export function updateWalletDtoMetadataToJSON(
  updateWalletDtoMetadata: UpdateWalletDtoMetadata,
): string {
  return JSON.stringify(
    UpdateWalletDtoMetadata$outboundSchema.parse(updateWalletDtoMetadata),
  );
}

export function updateWalletDtoMetadataFromJSON(
  jsonString: string,
): SafeParseResult<UpdateWalletDtoMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateWalletDtoMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateWalletDtoMetadata' from JSON`,
  );
}

/** @internal */
export const UpdateWalletDto$inboundSchema: z.ZodType<
  UpdateWalletDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.string().optional(),
  metadata: z.lazy(() => UpdateWalletDtoMetadata$inboundSchema).optional(),
  name: z.string().optional(),
});

/** @internal */
export type UpdateWalletDto$Outbound = {
  description?: string | undefined;
  metadata?: UpdateWalletDtoMetadata$Outbound | undefined;
  name?: string | undefined;
};

/** @internal */
export const UpdateWalletDto$outboundSchema: z.ZodType<
  UpdateWalletDto$Outbound,
  z.ZodTypeDef,
  UpdateWalletDto
> = z.object({
  description: z.string().optional(),
  metadata: z.lazy(() => UpdateWalletDtoMetadata$outboundSchema).optional(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateWalletDto$ {
  /** @deprecated use `UpdateWalletDto$inboundSchema` instead. */
  export const inboundSchema = UpdateWalletDto$inboundSchema;
  /** @deprecated use `UpdateWalletDto$outboundSchema` instead. */
  export const outboundSchema = UpdateWalletDto$outboundSchema;
  /** @deprecated use `UpdateWalletDto$Outbound` instead. */
  export type Outbound = UpdateWalletDto$Outbound;
}

export function updateWalletDtoToJSON(
  updateWalletDto: UpdateWalletDto,
): string {
  return JSON.stringify(UpdateWalletDto$outboundSchema.parse(updateWalletDto));
}

export function updateWalletDtoFromJSON(
  jsonString: string,
): SafeParseResult<UpdateWalletDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateWalletDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateWalletDto' from JSON`,
  );
}
