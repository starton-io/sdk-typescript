/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    CustomGasDto,
    CustomGasDto$inboundSchema,
    CustomGasDto$Outbound,
    CustomGasDto$outboundSchema,
} from "./customgasdto.js";
import * as z from "zod";

export type CreateTransactionDtoMetadata = {};

/**
 * The gas speed you want. If custom it requires customGas field
 */
export enum CreateTransactionDtoSpeed {
    Low = "low",
    Average = "average",
    Fast = "fast",
    Fastest = "fastest",
    Custom = "custom",
}

export type CreateTransactionDto = {
    customGas?: CustomGasDto | undefined;
    /**
     * Transaction data.
     */
    data?: string | undefined;
    gasLimit?: string | undefined;
    metadata?: CreateTransactionDtoMetadata | undefined;
    /**
     * Your network you want to perform transaction.
     */
    network: string;
    /**
     * Your transaction nonce. Don't fill this value if you want to use relayer nonce auto assignation.
     */
    nonce?: number | undefined;
    /**
     * Your kms address. It's also the from of your transaction.
     */
    signerWallet: string;
    /**
     * The gas speed you want. If custom it requires customGas field
     */
    speed?: CreateTransactionDtoSpeed | undefined;
    /**
     * The address you want to send to.
     */
    to?: string | undefined;
    /**
     * The value of the transaction in wei.
     */
    value?: string | undefined;
};

/** @internal */
export const CreateTransactionDtoMetadata$inboundSchema: z.ZodType<
    CreateTransactionDtoMetadata,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type CreateTransactionDtoMetadata$Outbound = {};

/** @internal */
export const CreateTransactionDtoMetadata$outboundSchema: z.ZodType<
    CreateTransactionDtoMetadata$Outbound,
    z.ZodTypeDef,
    CreateTransactionDtoMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTransactionDtoMetadata$ {
    /** @deprecated use `CreateTransactionDtoMetadata$inboundSchema` instead. */
    export const inboundSchema = CreateTransactionDtoMetadata$inboundSchema;
    /** @deprecated use `CreateTransactionDtoMetadata$outboundSchema` instead. */
    export const outboundSchema = CreateTransactionDtoMetadata$outboundSchema;
    /** @deprecated use `CreateTransactionDtoMetadata$Outbound` instead. */
    export type Outbound = CreateTransactionDtoMetadata$Outbound;
}

/** @internal */
export const CreateTransactionDtoSpeed$inboundSchema: z.ZodNativeEnum<
    typeof CreateTransactionDtoSpeed
> = z.nativeEnum(CreateTransactionDtoSpeed);

/** @internal */
export const CreateTransactionDtoSpeed$outboundSchema: z.ZodNativeEnum<
    typeof CreateTransactionDtoSpeed
> = CreateTransactionDtoSpeed$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTransactionDtoSpeed$ {
    /** @deprecated use `CreateTransactionDtoSpeed$inboundSchema` instead. */
    export const inboundSchema = CreateTransactionDtoSpeed$inboundSchema;
    /** @deprecated use `CreateTransactionDtoSpeed$outboundSchema` instead. */
    export const outboundSchema = CreateTransactionDtoSpeed$outboundSchema;
}

/** @internal */
export const CreateTransactionDto$inboundSchema: z.ZodType<
    CreateTransactionDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    customGas: CustomGasDto$inboundSchema.optional(),
    data: z.string().optional(),
    gasLimit: z.string().optional(),
    metadata: z.lazy(() => CreateTransactionDtoMetadata$inboundSchema).optional(),
    network: z.string(),
    nonce: z.number().int().optional(),
    signerWallet: z.string(),
    speed: CreateTransactionDtoSpeed$inboundSchema.optional(),
    to: z.string().optional(),
    value: z.string().optional(),
});

/** @internal */
export type CreateTransactionDto$Outbound = {
    customGas?: CustomGasDto$Outbound | undefined;
    data?: string | undefined;
    gasLimit?: string | undefined;
    metadata?: CreateTransactionDtoMetadata$Outbound | undefined;
    network: string;
    nonce?: number | undefined;
    signerWallet: string;
    speed?: string | undefined;
    to?: string | undefined;
    value?: string | undefined;
};

/** @internal */
export const CreateTransactionDto$outboundSchema: z.ZodType<
    CreateTransactionDto$Outbound,
    z.ZodTypeDef,
    CreateTransactionDto
> = z.object({
    customGas: CustomGasDto$outboundSchema.optional(),
    data: z.string().optional(),
    gasLimit: z.string().optional(),
    metadata: z.lazy(() => CreateTransactionDtoMetadata$outboundSchema).optional(),
    network: z.string(),
    nonce: z.number().int().optional(),
    signerWallet: z.string(),
    speed: CreateTransactionDtoSpeed$outboundSchema.optional(),
    to: z.string().optional(),
    value: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTransactionDto$ {
    /** @deprecated use `CreateTransactionDto$inboundSchema` instead. */
    export const inboundSchema = CreateTransactionDto$inboundSchema;
    /** @deprecated use `CreateTransactionDto$outboundSchema` instead. */
    export const outboundSchema = CreateTransactionDto$outboundSchema;
    /** @deprecated use `CreateTransactionDto$Outbound` instead. */
    export type Outbound = CreateTransactionDto$Outbound;
}
