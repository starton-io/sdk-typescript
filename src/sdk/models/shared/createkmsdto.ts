/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  AwsKmsCredentialsDto,
  AwsKmsCredentialsDto$inboundSchema,
  AwsKmsCredentialsDto$Outbound,
  AwsKmsCredentialsDto$outboundSchema,
} from "./awskmscredentialsdto.js";
import {
  VaultKmsCredentialsDto,
  VaultKmsCredentialsDto$inboundSchema,
  VaultKmsCredentialsDto$Outbound,
  VaultKmsCredentialsDto$outboundSchema,
} from "./vaultkmscredentialsdto.js";

export type Credentials = AwsKmsCredentialsDto | VaultKmsCredentialsDto;

export type Metadata = {};

export enum Provider {
  Aws = "AWS",
  Vault = "Vault",
}

export type CreateKmsDto = {
  credentials?: AwsKmsCredentialsDto | VaultKmsCredentialsDto | undefined;
  metadata?: Metadata | undefined;
  name: string;
  provider: Provider;
  secret: string;
};

/** @internal */
export const Credentials$inboundSchema: z.ZodType<
  Credentials,
  z.ZodTypeDef,
  unknown
> = z.union([
  AwsKmsCredentialsDto$inboundSchema,
  VaultKmsCredentialsDto$inboundSchema,
]);

/** @internal */
export type Credentials$Outbound =
  | AwsKmsCredentialsDto$Outbound
  | VaultKmsCredentialsDto$Outbound;

/** @internal */
export const Credentials$outboundSchema: z.ZodType<
  Credentials$Outbound,
  z.ZodTypeDef,
  Credentials
> = z.union([
  AwsKmsCredentialsDto$outboundSchema,
  VaultKmsCredentialsDto$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Credentials$ {
  /** @deprecated use `Credentials$inboundSchema` instead. */
  export const inboundSchema = Credentials$inboundSchema;
  /** @deprecated use `Credentials$outboundSchema` instead. */
  export const outboundSchema = Credentials$outboundSchema;
  /** @deprecated use `Credentials$Outbound` instead. */
  export type Outbound = Credentials$Outbound;
}

/** @internal */
export const Metadata$inboundSchema: z.ZodType<
  Metadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type Metadata$Outbound = {};

/** @internal */
export const Metadata$outboundSchema: z.ZodType<
  Metadata$Outbound,
  z.ZodTypeDef,
  Metadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Metadata$ {
  /** @deprecated use `Metadata$inboundSchema` instead. */
  export const inboundSchema = Metadata$inboundSchema;
  /** @deprecated use `Metadata$outboundSchema` instead. */
  export const outboundSchema = Metadata$outboundSchema;
  /** @deprecated use `Metadata$Outbound` instead. */
  export type Outbound = Metadata$Outbound;
}

/** @internal */
export const Provider$inboundSchema: z.ZodNativeEnum<typeof Provider> = z
  .nativeEnum(Provider);

/** @internal */
export const Provider$outboundSchema: z.ZodNativeEnum<typeof Provider> =
  Provider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Provider$ {
  /** @deprecated use `Provider$inboundSchema` instead. */
  export const inboundSchema = Provider$inboundSchema;
  /** @deprecated use `Provider$outboundSchema` instead. */
  export const outboundSchema = Provider$outboundSchema;
}

/** @internal */
export const CreateKmsDto$inboundSchema: z.ZodType<
  CreateKmsDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  credentials: z.union([
    AwsKmsCredentialsDto$inboundSchema,
    VaultKmsCredentialsDto$inboundSchema,
  ]).optional(),
  metadata: z.lazy(() => Metadata$inboundSchema).optional(),
  name: z.string(),
  provider: Provider$inboundSchema,
  secret: z.string(),
});

/** @internal */
export type CreateKmsDto$Outbound = {
  credentials?:
    | AwsKmsCredentialsDto$Outbound
    | VaultKmsCredentialsDto$Outbound
    | undefined;
  metadata?: Metadata$Outbound | undefined;
  name: string;
  provider: string;
  secret: string;
};

/** @internal */
export const CreateKmsDto$outboundSchema: z.ZodType<
  CreateKmsDto$Outbound,
  z.ZodTypeDef,
  CreateKmsDto
> = z.object({
  credentials: z.union([
    AwsKmsCredentialsDto$outboundSchema,
    VaultKmsCredentialsDto$outboundSchema,
  ]).optional(),
  metadata: z.lazy(() => Metadata$outboundSchema).optional(),
  name: z.string(),
  provider: Provider$outboundSchema,
  secret: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateKmsDto$ {
  /** @deprecated use `CreateKmsDto$inboundSchema` instead. */
  export const inboundSchema = CreateKmsDto$inboundSchema;
  /** @deprecated use `CreateKmsDto$outboundSchema` instead. */
  export const outboundSchema = CreateKmsDto$outboundSchema;
  /** @deprecated use `CreateKmsDto$Outbound` instead. */
  export type Outbound = CreateKmsDto$Outbound;
}
