/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AddressNativeBalanceResponse = {
  /**
   * The amount of native currency the wallet has.
   */
  balance: string;
  /**
   * The number of decimals on the blockchain.
   */
  decimal: number;
  /**
   * The formatted (human readable) output.
   */
  formatted: string;
  /**
   * native currency symbol.
   */
  symbol: string;
};

/** @internal */
export const AddressNativeBalanceResponse$inboundSchema: z.ZodType<
  AddressNativeBalanceResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  balance: z.string(),
  decimal: z.number(),
  formatted: z.string(),
  symbol: z.string(),
});

/** @internal */
export type AddressNativeBalanceResponse$Outbound = {
  balance: string;
  decimal: number;
  formatted: string;
  symbol: string;
};

/** @internal */
export const AddressNativeBalanceResponse$outboundSchema: z.ZodType<
  AddressNativeBalanceResponse$Outbound,
  z.ZodTypeDef,
  AddressNativeBalanceResponse
> = z.object({
  balance: z.string(),
  decimal: z.number(),
  formatted: z.string(),
  symbol: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddressNativeBalanceResponse$ {
  /** @deprecated use `AddressNativeBalanceResponse$inboundSchema` instead. */
  export const inboundSchema = AddressNativeBalanceResponse$inboundSchema;
  /** @deprecated use `AddressNativeBalanceResponse$outboundSchema` instead. */
  export const outboundSchema = AddressNativeBalanceResponse$outboundSchema;
  /** @deprecated use `AddressNativeBalanceResponse$Outbound` instead. */
  export type Outbound = AddressNativeBalanceResponse$Outbound;
}

export function addressNativeBalanceResponseToJSON(
  addressNativeBalanceResponse: AddressNativeBalanceResponse,
): string {
  return JSON.stringify(
    AddressNativeBalanceResponse$outboundSchema.parse(
      addressNativeBalanceResponse,
    ),
  );
}

export function addressNativeBalanceResponseFromJSON(
  jsonString: string,
): SafeParseResult<AddressNativeBalanceResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AddressNativeBalanceResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AddressNativeBalanceResponse' from JSON`,
  );
}
