/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SettingRelayer = {
  createdAt?: Date | undefined;
  id: string;
  network: string;
  projectId: string;
  unstuckAutomaticGasPrice: boolean;
  unstuckCustomGasPrice: boolean;
  unstuckGasPriceDelay: number;
  unstuckMaxGasPrice: string;
  unstuckMissingNonce: boolean;
  unstuckMissingNonceDelay: number;
  updatedAt?: Date | undefined;
};

/** @internal */
export const SettingRelayer$inboundSchema: z.ZodType<
  SettingRelayer,
  z.ZodTypeDef,
  unknown
> = z.object({
  createdAt: z.string().datetime({ offset: true }).default(
    "2024-10-07T18:00:44.901Z",
  ).transform(v => new Date(v)),
  id: z.string(),
  network: z.string(),
  projectId: z.string(),
  unstuckAutomaticGasPrice: z.boolean(),
  unstuckCustomGasPrice: z.boolean(),
  unstuckGasPriceDelay: z.number(),
  unstuckMaxGasPrice: z.string(),
  unstuckMissingNonce: z.boolean(),
  unstuckMissingNonceDelay: z.number(),
  updatedAt: z.string().datetime({ offset: true }).default(
    "2024-10-07T18:00:44.901Z",
  ).transform(v => new Date(v)),
});

/** @internal */
export type SettingRelayer$Outbound = {
  createdAt: string;
  id: string;
  network: string;
  projectId: string;
  unstuckAutomaticGasPrice: boolean;
  unstuckCustomGasPrice: boolean;
  unstuckGasPriceDelay: number;
  unstuckMaxGasPrice: string;
  unstuckMissingNonce: boolean;
  unstuckMissingNonceDelay: number;
  updatedAt: string;
};

/** @internal */
export const SettingRelayer$outboundSchema: z.ZodType<
  SettingRelayer$Outbound,
  z.ZodTypeDef,
  SettingRelayer
> = z.object({
  createdAt: z.date().default(() => new Date("2024-10-07T18:00:44.901Z"))
    .transform(v => v.toISOString()),
  id: z.string(),
  network: z.string(),
  projectId: z.string(),
  unstuckAutomaticGasPrice: z.boolean(),
  unstuckCustomGasPrice: z.boolean(),
  unstuckGasPriceDelay: z.number(),
  unstuckMaxGasPrice: z.string(),
  unstuckMissingNonce: z.boolean(),
  unstuckMissingNonceDelay: z.number(),
  updatedAt: z.date().default(() => new Date("2024-10-07T18:00:44.901Z"))
    .transform(v => v.toISOString()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SettingRelayer$ {
  /** @deprecated use `SettingRelayer$inboundSchema` instead. */
  export const inboundSchema = SettingRelayer$inboundSchema;
  /** @deprecated use `SettingRelayer$outboundSchema` instead. */
  export const outboundSchema = SettingRelayer$outboundSchema;
  /** @deprecated use `SettingRelayer$Outbound` instead. */
  export type Outbound = SettingRelayer$Outbound;
}
