/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type DeleteWalletRequest = {
    address: string;
    deleteKeyOnKms?: boolean | undefined;
};

export type DeleteWalletResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    number?: number | undefined;
};

/** @internal */
export const DeleteWalletRequest$inboundSchema: z.ZodType<
    DeleteWalletRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    address: z.string(),
    deleteKeyOnKms: z.boolean().optional(),
});

/** @internal */
export type DeleteWalletRequest$Outbound = {
    address: string;
    deleteKeyOnKms?: boolean | undefined;
};

/** @internal */
export const DeleteWalletRequest$outboundSchema: z.ZodType<
    DeleteWalletRequest$Outbound,
    z.ZodTypeDef,
    DeleteWalletRequest
> = z.object({
    address: z.string(),
    deleteKeyOnKms: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteWalletRequest$ {
    /** @deprecated use `DeleteWalletRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteWalletRequest$inboundSchema;
    /** @deprecated use `DeleteWalletRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteWalletRequest$outboundSchema;
    /** @deprecated use `DeleteWalletRequest$Outbound` instead. */
    export type Outbound = DeleteWalletRequest$Outbound;
}

/** @internal */
export const DeleteWalletResponse$inboundSchema: z.ZodType<
    DeleteWalletResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
        number: z.number().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type DeleteWalletResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    number?: number | undefined;
};

/** @internal */
export const DeleteWalletResponse$outboundSchema: z.ZodType<
    DeleteWalletResponse$Outbound,
    z.ZodTypeDef,
    DeleteWalletResponse
> = z
    .object({
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
        number: z.number().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteWalletResponse$ {
    /** @deprecated use `DeleteWalletResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteWalletResponse$inboundSchema;
    /** @deprecated use `DeleteWalletResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteWalletResponse$outboundSchema;
    /** @deprecated use `DeleteWalletResponse$Outbound` instead. */
    export type Outbound = DeleteWalletResponse$Outbound;
}
