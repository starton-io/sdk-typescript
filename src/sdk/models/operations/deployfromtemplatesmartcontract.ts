/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type DeployFromTemplateSmartContractRequest = {
    /**
     * Deploy smart contract from template body payload.
     */
    deployFromTemplateDto: shared.DeployFromTemplateDto;
    /**
     * Boolean for transaction simulation. Will estimate gas price.
     */
    simulate?: boolean | undefined;
};

export type DeployFromTemplateSmartContractResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    deploySmartContractResponse?: shared.DeploySmartContractResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace DeployFromTemplateSmartContractRequest$ {
    export const inboundSchema: z.ZodType<
        DeployFromTemplateSmartContractRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            DeployFromTemplateDto: shared.DeployFromTemplateDto$.inboundSchema,
            simulate: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                DeployFromTemplateDto: "deployFromTemplateDto",
            });
        });

    export type Outbound = {
        DeployFromTemplateDto: shared.DeployFromTemplateDto$.Outbound;
        simulate?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DeployFromTemplateSmartContractRequest
    > = z
        .object({
            deployFromTemplateDto: shared.DeployFromTemplateDto$.outboundSchema,
            simulate: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                deployFromTemplateDto: "DeployFromTemplateDto",
            });
        });
}

/** @internal */
export namespace DeployFromTemplateSmartContractResponse$ {
    export const inboundSchema: z.ZodType<
        DeployFromTemplateSmartContractResponse,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            ContentType: z.string(),
            DeploySmartContractResponse:
                shared.DeploySmartContractResponse$.inboundSchema.optional(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return remap$(v, {
                ContentType: "contentType",
                DeploySmartContractResponse: "deploySmartContractResponse",
                StatusCode: "statusCode",
                RawResponse: "rawResponse",
            });
        });

    export type Outbound = {
        ContentType: string;
        DeploySmartContractResponse?: shared.DeploySmartContractResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DeployFromTemplateSmartContractResponse
    > = z
        .object({
            contentType: z.string(),
            deploySmartContractResponse:
                shared.DeploySmartContractResponse$.outboundSchema.optional(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return remap$(v, {
                contentType: "ContentType",
                deploySmartContractResponse: "DeploySmartContractResponse",
                statusCode: "StatusCode",
                rawResponse: "RawResponse",
            });
        });
}
