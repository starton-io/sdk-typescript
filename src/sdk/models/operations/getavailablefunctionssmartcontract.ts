/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type GetAvailableFunctionsSmartContractRequest = {
  /**
   * Smart contract address.
   */
  address: string;
  /**
   * EVM starton supported network.
   */
  network: string;
};

export type GetAvailableFunctionsSmartContractResponse = {
  availableFunctions?: shared.AvailableFunctions | undefined;
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const GetAvailableFunctionsSmartContractRequest$inboundSchema: z.ZodType<
  GetAvailableFunctionsSmartContractRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  address: z.string(),
  network: z.string(),
});

/** @internal */
export type GetAvailableFunctionsSmartContractRequest$Outbound = {
  address: string;
  network: string;
};

/** @internal */
export const GetAvailableFunctionsSmartContractRequest$outboundSchema:
  z.ZodType<
    GetAvailableFunctionsSmartContractRequest$Outbound,
    z.ZodTypeDef,
    GetAvailableFunctionsSmartContractRequest
  > = z.object({
    address: z.string(),
    network: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAvailableFunctionsSmartContractRequest$ {
  /** @deprecated use `GetAvailableFunctionsSmartContractRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetAvailableFunctionsSmartContractRequest$inboundSchema;
  /** @deprecated use `GetAvailableFunctionsSmartContractRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetAvailableFunctionsSmartContractRequest$outboundSchema;
  /** @deprecated use `GetAvailableFunctionsSmartContractRequest$Outbound` instead. */
  export type Outbound = GetAvailableFunctionsSmartContractRequest$Outbound;
}

/** @internal */
export const GetAvailableFunctionsSmartContractResponse$inboundSchema:
  z.ZodType<GetAvailableFunctionsSmartContractResponse, z.ZodTypeDef, unknown> =
    z.object({
      AvailableFunctions: shared.AvailableFunctions$inboundSchema.optional(),
      ContentType: z.string(),
      StatusCode: z.number().int(),
      RawResponse: z.instanceof(Response),
    }).transform((v) => {
      return remap$(v, {
        "AvailableFunctions": "availableFunctions",
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
      });
    });

/** @internal */
export type GetAvailableFunctionsSmartContractResponse$Outbound = {
  AvailableFunctions?: shared.AvailableFunctions$Outbound | undefined;
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const GetAvailableFunctionsSmartContractResponse$outboundSchema:
  z.ZodType<
    GetAvailableFunctionsSmartContractResponse$Outbound,
    z.ZodTypeDef,
    GetAvailableFunctionsSmartContractResponse
  > = z.object({
    availableFunctions: shared.AvailableFunctions$outboundSchema.optional(),
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
  }).transform((v) => {
    return remap$(v, {
      availableFunctions: "AvailableFunctions",
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAvailableFunctionsSmartContractResponse$ {
  /** @deprecated use `GetAvailableFunctionsSmartContractResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetAvailableFunctionsSmartContractResponse$inboundSchema;
  /** @deprecated use `GetAvailableFunctionsSmartContractResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetAvailableFunctionsSmartContractResponse$outboundSchema;
  /** @deprecated use `GetAvailableFunctionsSmartContractResponse$Outbound` instead. */
  export type Outbound = GetAvailableFunctionsSmartContractResponse$Outbound;
}
