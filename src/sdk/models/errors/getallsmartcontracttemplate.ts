/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetAllSmartContractTemplateResponseBody = BadRequestException;

/** @internal */
export const GetAllSmartContractTemplateResponseBody$inboundSchema: z.ZodType<
  GetAllSmartContractTemplateResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type GetAllSmartContractTemplateResponseBody$Outbound =
  BadRequestException$Outbound;

/** @internal */
export const GetAllSmartContractTemplateResponseBody$outboundSchema: z.ZodType<
  GetAllSmartContractTemplateResponseBody$Outbound,
  z.ZodTypeDef,
  GetAllSmartContractTemplateResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllSmartContractTemplateResponseBody$ {
  /** @deprecated use `GetAllSmartContractTemplateResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetAllSmartContractTemplateResponseBody$inboundSchema;
  /** @deprecated use `GetAllSmartContractTemplateResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetAllSmartContractTemplateResponseBody$outboundSchema;
  /** @deprecated use `GetAllSmartContractTemplateResponseBody$Outbound` instead. */
  export type Outbound = GetAllSmartContractTemplateResponseBody$Outbound;
}

export function getAllSmartContractTemplateResponseBodyToJSON(
  getAllSmartContractTemplateResponseBody:
    GetAllSmartContractTemplateResponseBody,
): string {
  return JSON.stringify(
    GetAllSmartContractTemplateResponseBody$outboundSchema.parse(
      getAllSmartContractTemplateResponseBody,
    ),
  );
}

export function getAllSmartContractTemplateResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetAllSmartContractTemplateResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetAllSmartContractTemplateResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetAllSmartContractTemplateResponseBody' from JSON`,
  );
}
