/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { BadRequestException, BadRequestException$ } from "./badrequestexception.js";
import { CouldNotPerformRequest, CouldNotPerformRequest$ } from "./couldnotperformrequest.js";
import {
    MicroserviceNotResponding,
    MicroserviceNotResponding$,
} from "./microservicenotresponding.js";
import * as z from "zod";

export type ClaimFaucetWalletResponseBody = MicroserviceNotResponding | CouldNotPerformRequest;

export type ClaimFaucetResponseBody = BadRequestException;

/** @internal */
export namespace ClaimFaucetWalletResponseBody$ {
    export const inboundSchema: z.ZodType<ClaimFaucetWalletResponseBody, z.ZodTypeDef, unknown> =
        z.union([MicroserviceNotResponding$.inboundSchema, CouldNotPerformRequest$.inboundSchema]);

    export type Outbound = MicroserviceNotResponding$.Outbound | CouldNotPerformRequest$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ClaimFaucetWalletResponseBody> =
        z.union([
            MicroserviceNotResponding$.outboundSchema,
            CouldNotPerformRequest$.outboundSchema,
        ]);
}

/** @internal */
export namespace ClaimFaucetResponseBody$ {
    export const inboundSchema: z.ZodType<ClaimFaucetResponseBody, z.ZodTypeDef, unknown> =
        BadRequestException$.inboundSchema;

    export type Outbound = BadRequestException$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ClaimFaucetResponseBody> =
        BadRequestException$.outboundSchema;
}
