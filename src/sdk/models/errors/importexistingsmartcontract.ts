/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { BadRequestException, BadRequestException$ } from "./badrequestexception.js";
import { InvalidAbi, InvalidAbi$ } from "./invalidabi.js";
import * as z from "zod";

export type ImportExistingSmartContractResponseBody = InvalidAbi | BadRequestException;

/** @internal */
export namespace ImportExistingSmartContractResponseBody$ {
    export const inboundSchema: z.ZodType<
        ImportExistingSmartContractResponseBody,
        z.ZodTypeDef,
        unknown
    > = z.union([InvalidAbi$.inboundSchema, BadRequestException$.inboundSchema]);

    export type Outbound = InvalidAbi$.Outbound | BadRequestException$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ImportExistingSmartContractResponseBody
    > = z.union([InvalidAbi$.outboundSchema, BadRequestException$.outboundSchema]);
}
