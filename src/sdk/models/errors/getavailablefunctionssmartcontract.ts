/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { BadRequestException, BadRequestException$ } from "./badrequestexception.js";
import { CouldNotFindResource, CouldNotFindResource$ } from "./couldnotfindresource.js";
import { InvalidAbi, InvalidAbi$ } from "./invalidabi.js";
import { InvalidBytecode, InvalidBytecode$ } from "./invalidbytecode.js";
import { Unknown, Unknown$ } from "./unknown.js";
import * as z from "zod";

export type GetAvailableFunctionsSmartContractSmartContractManagementResponseResponseBody = Unknown;

export type GetAvailableFunctionsSmartContractSmartContractManagementResponseBody =
    CouldNotFindResource;

export type GetAvailableFunctionsSmartContractResponseBody =
    | InvalidBytecode
    | InvalidAbi
    | BadRequestException;

/** @internal */
export namespace GetAvailableFunctionsSmartContractSmartContractManagementResponseResponseBody$ {
    export const inboundSchema: z.ZodType<
        GetAvailableFunctionsSmartContractSmartContractManagementResponseResponseBody,
        z.ZodTypeDef,
        unknown
    > = Unknown$.inboundSchema;

    export type Outbound = Unknown$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetAvailableFunctionsSmartContractSmartContractManagementResponseResponseBody
    > = Unknown$.outboundSchema;
}

/** @internal */
export namespace GetAvailableFunctionsSmartContractSmartContractManagementResponseBody$ {
    export const inboundSchema: z.ZodType<
        GetAvailableFunctionsSmartContractSmartContractManagementResponseBody,
        z.ZodTypeDef,
        unknown
    > = CouldNotFindResource$.inboundSchema;

    export type Outbound = CouldNotFindResource$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetAvailableFunctionsSmartContractSmartContractManagementResponseBody
    > = CouldNotFindResource$.outboundSchema;
}

/** @internal */
export namespace GetAvailableFunctionsSmartContractResponseBody$ {
    export const inboundSchema: z.ZodType<
        GetAvailableFunctionsSmartContractResponseBody,
        z.ZodTypeDef,
        unknown
    > = z.union([
        InvalidBytecode$.inboundSchema,
        InvalidAbi$.inboundSchema,
        BadRequestException$.inboundSchema,
    ]);

    export type Outbound =
        | InvalidBytecode$.Outbound
        | InvalidAbi$.Outbound
        | BadRequestException$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetAvailableFunctionsSmartContractResponseBody
    > = z.union([
        InvalidBytecode$.outboundSchema,
        InvalidAbi$.outboundSchema,
        BadRequestException$.outboundSchema,
    ]);
}
