/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import {
  CouldNotAssignNonce,
  CouldNotAssignNonce$inboundSchema,
  CouldNotAssignNonce$Outbound,
  CouldNotAssignNonce$outboundSchema,
} from "./couldnotassignnonce.js";
import {
  CouldNotFindResource,
  CouldNotFindResource$inboundSchema,
  CouldNotFindResource$Outbound,
  CouldNotFindResource$outboundSchema,
} from "./couldnotfindresource.js";
import {
  CouldNotProcessEntity,
  CouldNotProcessEntity$inboundSchema,
  CouldNotProcessEntity$Outbound,
  CouldNotProcessEntity$outboundSchema,
} from "./couldnotprocessentity.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody =
  CouldNotAssignNonce;

export type GetAvailableNoncesWalletTransactionManagerResponseResponseBody =
  CouldNotProcessEntity;

export type GetAvailableNoncesWalletTransactionManagerResponseBody =
  CouldNotFindResource;

export type GetAvailableNoncesWalletResponseBody = BadRequestException;

/** @internal */
export const GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$inboundSchema:
  z.ZodType<
    GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody,
    z.ZodTypeDef,
    unknown
  > = CouldNotAssignNonce$inboundSchema;

/** @internal */
export type GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$Outbound =
  CouldNotAssignNonce$Outbound;

/** @internal */
export const GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$outboundSchema:
  z.ZodType<
    GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$Outbound,
    z.ZodTypeDef,
    GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody
  > = CouldNotAssignNonce$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$ {
  /** @deprecated use `GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$inboundSchema;
  /** @deprecated use `GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$outboundSchema;
  /** @deprecated use `GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$Outbound` instead. */
  export type Outbound =
    GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$Outbound;
}

export function getAvailableNoncesWalletTransactionManagerResponse500ResponseBodyToJSON(
  getAvailableNoncesWalletTransactionManagerResponse500ResponseBody:
    GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody,
): string {
  return JSON.stringify(
    GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$outboundSchema
      .parse(getAvailableNoncesWalletTransactionManagerResponse500ResponseBody),
  );
}

export function getAvailableNoncesWalletTransactionManagerResponse500ResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetAvailableNoncesWalletTransactionManagerResponse500ResponseBody' from JSON`,
  );
}

/** @internal */
export const GetAvailableNoncesWalletTransactionManagerResponseResponseBody$inboundSchema:
  z.ZodType<
    GetAvailableNoncesWalletTransactionManagerResponseResponseBody,
    z.ZodTypeDef,
    unknown
  > = CouldNotProcessEntity$inboundSchema;

/** @internal */
export type GetAvailableNoncesWalletTransactionManagerResponseResponseBody$Outbound =
  CouldNotProcessEntity$Outbound;

/** @internal */
export const GetAvailableNoncesWalletTransactionManagerResponseResponseBody$outboundSchema:
  z.ZodType<
    GetAvailableNoncesWalletTransactionManagerResponseResponseBody$Outbound,
    z.ZodTypeDef,
    GetAvailableNoncesWalletTransactionManagerResponseResponseBody
  > = CouldNotProcessEntity$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAvailableNoncesWalletTransactionManagerResponseResponseBody$ {
  /** @deprecated use `GetAvailableNoncesWalletTransactionManagerResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetAvailableNoncesWalletTransactionManagerResponseResponseBody$inboundSchema;
  /** @deprecated use `GetAvailableNoncesWalletTransactionManagerResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetAvailableNoncesWalletTransactionManagerResponseResponseBody$outboundSchema;
  /** @deprecated use `GetAvailableNoncesWalletTransactionManagerResponseResponseBody$Outbound` instead. */
  export type Outbound =
    GetAvailableNoncesWalletTransactionManagerResponseResponseBody$Outbound;
}

export function getAvailableNoncesWalletTransactionManagerResponseResponseBodyToJSON(
  getAvailableNoncesWalletTransactionManagerResponseResponseBody:
    GetAvailableNoncesWalletTransactionManagerResponseResponseBody,
): string {
  return JSON.stringify(
    GetAvailableNoncesWalletTransactionManagerResponseResponseBody$outboundSchema
      .parse(getAvailableNoncesWalletTransactionManagerResponseResponseBody),
  );
}

export function getAvailableNoncesWalletTransactionManagerResponseResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetAvailableNoncesWalletTransactionManagerResponseResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetAvailableNoncesWalletTransactionManagerResponseResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetAvailableNoncesWalletTransactionManagerResponseResponseBody' from JSON`,
  );
}

/** @internal */
export const GetAvailableNoncesWalletTransactionManagerResponseBody$inboundSchema:
  z.ZodType<
    GetAvailableNoncesWalletTransactionManagerResponseBody,
    z.ZodTypeDef,
    unknown
  > = CouldNotFindResource$inboundSchema;

/** @internal */
export type GetAvailableNoncesWalletTransactionManagerResponseBody$Outbound =
  CouldNotFindResource$Outbound;

/** @internal */
export const GetAvailableNoncesWalletTransactionManagerResponseBody$outboundSchema:
  z.ZodType<
    GetAvailableNoncesWalletTransactionManagerResponseBody$Outbound,
    z.ZodTypeDef,
    GetAvailableNoncesWalletTransactionManagerResponseBody
  > = CouldNotFindResource$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAvailableNoncesWalletTransactionManagerResponseBody$ {
  /** @deprecated use `GetAvailableNoncesWalletTransactionManagerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetAvailableNoncesWalletTransactionManagerResponseBody$inboundSchema;
  /** @deprecated use `GetAvailableNoncesWalletTransactionManagerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetAvailableNoncesWalletTransactionManagerResponseBody$outboundSchema;
  /** @deprecated use `GetAvailableNoncesWalletTransactionManagerResponseBody$Outbound` instead. */
  export type Outbound =
    GetAvailableNoncesWalletTransactionManagerResponseBody$Outbound;
}

export function getAvailableNoncesWalletTransactionManagerResponseBodyToJSON(
  getAvailableNoncesWalletTransactionManagerResponseBody:
    GetAvailableNoncesWalletTransactionManagerResponseBody,
): string {
  return JSON.stringify(
    GetAvailableNoncesWalletTransactionManagerResponseBody$outboundSchema.parse(
      getAvailableNoncesWalletTransactionManagerResponseBody,
    ),
  );
}

export function getAvailableNoncesWalletTransactionManagerResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetAvailableNoncesWalletTransactionManagerResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetAvailableNoncesWalletTransactionManagerResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetAvailableNoncesWalletTransactionManagerResponseBody' from JSON`,
  );
}

/** @internal */
export const GetAvailableNoncesWalletResponseBody$inboundSchema: z.ZodType<
  GetAvailableNoncesWalletResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type GetAvailableNoncesWalletResponseBody$Outbound =
  BadRequestException$Outbound;

/** @internal */
export const GetAvailableNoncesWalletResponseBody$outboundSchema: z.ZodType<
  GetAvailableNoncesWalletResponseBody$Outbound,
  z.ZodTypeDef,
  GetAvailableNoncesWalletResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAvailableNoncesWalletResponseBody$ {
  /** @deprecated use `GetAvailableNoncesWalletResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetAvailableNoncesWalletResponseBody$inboundSchema;
  /** @deprecated use `GetAvailableNoncesWalletResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetAvailableNoncesWalletResponseBody$outboundSchema;
  /** @deprecated use `GetAvailableNoncesWalletResponseBody$Outbound` instead. */
  export type Outbound = GetAvailableNoncesWalletResponseBody$Outbound;
}

export function getAvailableNoncesWalletResponseBodyToJSON(
  getAvailableNoncesWalletResponseBody: GetAvailableNoncesWalletResponseBody,
): string {
  return JSON.stringify(
    GetAvailableNoncesWalletResponseBody$outboundSchema.parse(
      getAvailableNoncesWalletResponseBody,
    ),
  );
}

export function getAvailableNoncesWalletResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetAvailableNoncesWalletResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetAvailableNoncesWalletResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAvailableNoncesWalletResponseBody' from JSON`,
  );
}
