/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import {
  NotAuthenticated,
  NotAuthenticated$inboundSchema,
  NotAuthenticated$Outbound,
  NotAuthenticated$outboundSchema,
} from "./notauthenticated.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type CreateInvitationProjectMemberInvitationResponseBody =
  NotAuthenticated;

export type CreateInvitationResponseBody = BadRequestException;

/** @internal */
export const CreateInvitationProjectMemberInvitationResponseBody$inboundSchema:
  z.ZodType<
    CreateInvitationProjectMemberInvitationResponseBody,
    z.ZodTypeDef,
    unknown
  > = NotAuthenticated$inboundSchema;

/** @internal */
export type CreateInvitationProjectMemberInvitationResponseBody$Outbound =
  NotAuthenticated$Outbound;

/** @internal */
export const CreateInvitationProjectMemberInvitationResponseBody$outboundSchema:
  z.ZodType<
    CreateInvitationProjectMemberInvitationResponseBody$Outbound,
    z.ZodTypeDef,
    CreateInvitationProjectMemberInvitationResponseBody
  > = NotAuthenticated$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateInvitationProjectMemberInvitationResponseBody$ {
  /** @deprecated use `CreateInvitationProjectMemberInvitationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    CreateInvitationProjectMemberInvitationResponseBody$inboundSchema;
  /** @deprecated use `CreateInvitationProjectMemberInvitationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateInvitationProjectMemberInvitationResponseBody$outboundSchema;
  /** @deprecated use `CreateInvitationProjectMemberInvitationResponseBody$Outbound` instead. */
  export type Outbound =
    CreateInvitationProjectMemberInvitationResponseBody$Outbound;
}

export function createInvitationProjectMemberInvitationResponseBodyToJSON(
  createInvitationProjectMemberInvitationResponseBody:
    CreateInvitationProjectMemberInvitationResponseBody,
): string {
  return JSON.stringify(
    CreateInvitationProjectMemberInvitationResponseBody$outboundSchema.parse(
      createInvitationProjectMemberInvitationResponseBody,
    ),
  );
}

export function createInvitationProjectMemberInvitationResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateInvitationProjectMemberInvitationResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateInvitationProjectMemberInvitationResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateInvitationProjectMemberInvitationResponseBody' from JSON`,
  );
}

/** @internal */
export const CreateInvitationResponseBody$inboundSchema: z.ZodType<
  CreateInvitationResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type CreateInvitationResponseBody$Outbound =
  BadRequestException$Outbound;

/** @internal */
export const CreateInvitationResponseBody$outboundSchema: z.ZodType<
  CreateInvitationResponseBody$Outbound,
  z.ZodTypeDef,
  CreateInvitationResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateInvitationResponseBody$ {
  /** @deprecated use `CreateInvitationResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateInvitationResponseBody$inboundSchema;
  /** @deprecated use `CreateInvitationResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateInvitationResponseBody$outboundSchema;
  /** @deprecated use `CreateInvitationResponseBody$Outbound` instead. */
  export type Outbound = CreateInvitationResponseBody$Outbound;
}

export function createInvitationResponseBodyToJSON(
  createInvitationResponseBody: CreateInvitationResponseBody,
): string {
  return JSON.stringify(
    CreateInvitationResponseBody$outboundSchema.parse(
      createInvitationResponseBody,
    ),
  );
}

export function createInvitationResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateInvitationResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateInvitationResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateInvitationResponseBody' from JSON`,
  );
}
