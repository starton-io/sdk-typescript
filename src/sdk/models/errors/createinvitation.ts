/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { BadRequestException, BadRequestException$ } from "./badrequestexception";
import { NotAuthenticated, NotAuthenticated$ } from "./notauthenticated";
import * as z from "zod";

export type CreateInvitationProjectMemberInvitationResponseBody = NotAuthenticated;

export type CreateInvitationResponseBody = BadRequestException;

/** @internal */
export namespace CreateInvitationProjectMemberInvitationResponseBody$ {
    export type Inbound = NotAuthenticated$.Inbound;

    export type Outbound = NotAuthenticated$.Outbound;
    export const inboundSchema: z.ZodType<
        CreateInvitationProjectMemberInvitationResponseBody,
        z.ZodTypeDef,
        Inbound
    > = NotAuthenticated$.inboundSchema;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateInvitationProjectMemberInvitationResponseBody
    > = NotAuthenticated$.outboundSchema;
}

/** @internal */
export namespace CreateInvitationResponseBody$ {
    export type Inbound = BadRequestException$.Inbound;

    export type Outbound = BadRequestException$.Outbound;
    export const inboundSchema: z.ZodType<CreateInvitationResponseBody, z.ZodTypeDef, Inbound> =
        BadRequestException$.inboundSchema;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateInvitationResponseBody> =
        BadRequestException$.outboundSchema;
}
