/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AlreadyKnown, AlreadyKnown$ } from "./alreadyknown.js";
import { BadRequestException, BadRequestException$ } from "./badrequestexception.js";
import { CouldNotAssignNonce, CouldNotAssignNonce$ } from "./couldnotassignnonce.js";
import { CouldNotBroadcast, CouldNotBroadcast$ } from "./couldnotbroadcast.js";
import { CouldNotEstimateGasPrice, CouldNotEstimateGasPrice$ } from "./couldnotestimategasprice.js";
import { CouldNotFindResource, CouldNotFindResource$ } from "./couldnotfindresource.js";
import { CouldNotSign, CouldNotSign$ } from "./couldnotsign.js";
import { ExecutionWillFail, ExecutionWillFail$ } from "./executionwillfail.js";
import { InsufficientFunds, InsufficientFunds$ } from "./insufficientfunds.js";
import { InvalidGasPrice, InvalidGasPrice$ } from "./invalidgasprice.js";
import { NonceExpired, NonceExpired$ } from "./nonceexpired.js";
import { NoProviderForNetwork, NoProviderForNetwork$ } from "./noproviderfornetwork.js";
import {
    ReplacementGasPriceUnderpriced,
    ReplacementGasPriceUnderpriced$,
} from "./replacementgaspriceunderpriced.js";
import { Unknown, Unknown$ } from "./unknown.js";
import { UnpredictableGasLimit, UnpredictableGasLimit$ } from "./unpredictablegaslimit.js";
import * as z from "zod";

export type CreateTransactionTransactionManagerResponse500ResponseBody =
    | CouldNotAssignNonce
    | CouldNotBroadcast
    | CouldNotEstimateGasPrice
    | NoProviderForNetwork
    | CouldNotSign
    | Unknown;

export type CreateTransactionTransactionManagerResponseResponseBody =
    ReplacementGasPriceUnderpriced;

export type CreateTransactionTransactionManagerResponseBody = CouldNotFindResource;

export type CreateTransactionResponseBody =
    | NonceExpired
    | ExecutionWillFail
    | InvalidGasPrice
    | InsufficientFunds
    | AlreadyKnown
    | UnpredictableGasLimit
    | BadRequestException;

/** @internal */
export namespace CreateTransactionTransactionManagerResponse500ResponseBody$ {
    export const inboundSchema: z.ZodType<
        CreateTransactionTransactionManagerResponse500ResponseBody,
        z.ZodTypeDef,
        unknown
    > = z.union([
        CouldNotAssignNonce$.inboundSchema,
        CouldNotBroadcast$.inboundSchema,
        CouldNotEstimateGasPrice$.inboundSchema,
        NoProviderForNetwork$.inboundSchema,
        CouldNotSign$.inboundSchema,
        Unknown$.inboundSchema,
    ]);

    export type Outbound =
        | CouldNotAssignNonce$.Outbound
        | CouldNotBroadcast$.Outbound
        | CouldNotEstimateGasPrice$.Outbound
        | NoProviderForNetwork$.Outbound
        | CouldNotSign$.Outbound
        | Unknown$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTransactionTransactionManagerResponse500ResponseBody
    > = z.union([
        CouldNotAssignNonce$.outboundSchema,
        CouldNotBroadcast$.outboundSchema,
        CouldNotEstimateGasPrice$.outboundSchema,
        NoProviderForNetwork$.outboundSchema,
        CouldNotSign$.outboundSchema,
        Unknown$.outboundSchema,
    ]);
}

/** @internal */
export namespace CreateTransactionTransactionManagerResponseResponseBody$ {
    export const inboundSchema: z.ZodType<
        CreateTransactionTransactionManagerResponseResponseBody,
        z.ZodTypeDef,
        unknown
    > = ReplacementGasPriceUnderpriced$.inboundSchema;

    export type Outbound = ReplacementGasPriceUnderpriced$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTransactionTransactionManagerResponseResponseBody
    > = ReplacementGasPriceUnderpriced$.outboundSchema;
}

/** @internal */
export namespace CreateTransactionTransactionManagerResponseBody$ {
    export const inboundSchema: z.ZodType<
        CreateTransactionTransactionManagerResponseBody,
        z.ZodTypeDef,
        unknown
    > = CouldNotFindResource$.inboundSchema;

    export type Outbound = CouldNotFindResource$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTransactionTransactionManagerResponseBody
    > = CouldNotFindResource$.outboundSchema;
}

/** @internal */
export namespace CreateTransactionResponseBody$ {
    export const inboundSchema: z.ZodType<CreateTransactionResponseBody, z.ZodTypeDef, unknown> =
        z.union([
            NonceExpired$.inboundSchema,
            ExecutionWillFail$.inboundSchema,
            InvalidGasPrice$.inboundSchema,
            InsufficientFunds$.inboundSchema,
            AlreadyKnown$.inboundSchema,
            UnpredictableGasLimit$.inboundSchema,
            BadRequestException$.inboundSchema,
        ]);

    export type Outbound =
        | NonceExpired$.Outbound
        | ExecutionWillFail$.Outbound
        | InvalidGasPrice$.Outbound
        | InsufficientFunds$.Outbound
        | AlreadyKnown$.Outbound
        | UnpredictableGasLimit$.Outbound
        | BadRequestException$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTransactionResponseBody> =
        z.union([
            NonceExpired$.outboundSchema,
            ExecutionWillFail$.outboundSchema,
            InvalidGasPrice$.outboundSchema,
            InsufficientFunds$.outboundSchema,
            AlreadyKnown$.outboundSchema,
            UnpredictableGasLimit$.outboundSchema,
            BadRequestException$.outboundSchema,
        ]);
}
