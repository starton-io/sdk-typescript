/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import {
    AlreadyKnown,
    AlreadyKnown$inboundSchema,
    AlreadyKnown$Outbound,
    AlreadyKnown$outboundSchema,
} from "./alreadyknown.js";
import {
    BadRequestException,
    BadRequestException$inboundSchema,
    BadRequestException$Outbound,
    BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import {
    CouldNotAssignNonce,
    CouldNotAssignNonce$inboundSchema,
    CouldNotAssignNonce$Outbound,
    CouldNotAssignNonce$outboundSchema,
} from "./couldnotassignnonce.js";
import {
    CouldNotBroadcast,
    CouldNotBroadcast$inboundSchema,
    CouldNotBroadcast$Outbound,
    CouldNotBroadcast$outboundSchema,
} from "./couldnotbroadcast.js";
import {
    CouldNotEstimateGasPrice,
    CouldNotEstimateGasPrice$inboundSchema,
    CouldNotEstimateGasPrice$Outbound,
    CouldNotEstimateGasPrice$outboundSchema,
} from "./couldnotestimategasprice.js";
import {
    CouldNotFindResource,
    CouldNotFindResource$inboundSchema,
    CouldNotFindResource$Outbound,
    CouldNotFindResource$outboundSchema,
} from "./couldnotfindresource.js";
import {
    CouldNotSign,
    CouldNotSign$inboundSchema,
    CouldNotSign$Outbound,
    CouldNotSign$outboundSchema,
} from "./couldnotsign.js";
import {
    ExecutionWillFail,
    ExecutionWillFail$inboundSchema,
    ExecutionWillFail$Outbound,
    ExecutionWillFail$outboundSchema,
} from "./executionwillfail.js";
import {
    InsufficientFunds,
    InsufficientFunds$inboundSchema,
    InsufficientFunds$Outbound,
    InsufficientFunds$outboundSchema,
} from "./insufficientfunds.js";
import {
    InvalidGasPrice,
    InvalidGasPrice$inboundSchema,
    InvalidGasPrice$Outbound,
    InvalidGasPrice$outboundSchema,
} from "./invalidgasprice.js";
import {
    NonceExpired,
    NonceExpired$inboundSchema,
    NonceExpired$Outbound,
    NonceExpired$outboundSchema,
} from "./nonceexpired.js";
import {
    NoProviderForNetwork,
    NoProviderForNetwork$inboundSchema,
    NoProviderForNetwork$Outbound,
    NoProviderForNetwork$outboundSchema,
} from "./noproviderfornetwork.js";
import {
    ReplacementGasPriceUnderpriced,
    ReplacementGasPriceUnderpriced$inboundSchema,
    ReplacementGasPriceUnderpriced$Outbound,
    ReplacementGasPriceUnderpriced$outboundSchema,
} from "./replacementgaspriceunderpriced.js";
import {
    Unknown,
    Unknown$inboundSchema,
    Unknown$Outbound,
    Unknown$outboundSchema,
} from "./unknown.js";
import {
    UnpredictableGasLimit,
    UnpredictableGasLimit$inboundSchema,
    UnpredictableGasLimit$Outbound,
    UnpredictableGasLimit$outboundSchema,
} from "./unpredictablegaslimit.js";
import * as z from "zod";

export type CreateTransactionTransactionManagerResponse500ResponseBody =
    | CouldNotAssignNonce
    | CouldNotBroadcast
    | CouldNotEstimateGasPrice
    | NoProviderForNetwork
    | CouldNotSign
    | Unknown;

export type CreateTransactionTransactionManagerResponseResponseBody =
    ReplacementGasPriceUnderpriced;

export type CreateTransactionTransactionManagerResponseBody = CouldNotFindResource;

export type CreateTransactionResponseBody =
    | NonceExpired
    | ExecutionWillFail
    | InvalidGasPrice
    | InsufficientFunds
    | AlreadyKnown
    | UnpredictableGasLimit
    | BadRequestException;

/** @internal */
export const CreateTransactionTransactionManagerResponse500ResponseBody$inboundSchema: z.ZodType<
    CreateTransactionTransactionManagerResponse500ResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    CouldNotAssignNonce$inboundSchema,
    CouldNotBroadcast$inboundSchema,
    CouldNotEstimateGasPrice$inboundSchema,
    NoProviderForNetwork$inboundSchema,
    CouldNotSign$inboundSchema,
    Unknown$inboundSchema,
]);

/** @internal */
export type CreateTransactionTransactionManagerResponse500ResponseBody$Outbound =
    | CouldNotAssignNonce$Outbound
    | CouldNotBroadcast$Outbound
    | CouldNotEstimateGasPrice$Outbound
    | NoProviderForNetwork$Outbound
    | CouldNotSign$Outbound
    | Unknown$Outbound;

/** @internal */
export const CreateTransactionTransactionManagerResponse500ResponseBody$outboundSchema: z.ZodType<
    CreateTransactionTransactionManagerResponse500ResponseBody$Outbound,
    z.ZodTypeDef,
    CreateTransactionTransactionManagerResponse500ResponseBody
> = z.union([
    CouldNotAssignNonce$outboundSchema,
    CouldNotBroadcast$outboundSchema,
    CouldNotEstimateGasPrice$outboundSchema,
    NoProviderForNetwork$outboundSchema,
    CouldNotSign$outboundSchema,
    Unknown$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTransactionTransactionManagerResponse500ResponseBody$ {
    /** @deprecated use `CreateTransactionTransactionManagerResponse500ResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        CreateTransactionTransactionManagerResponse500ResponseBody$inboundSchema;
    /** @deprecated use `CreateTransactionTransactionManagerResponse500ResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        CreateTransactionTransactionManagerResponse500ResponseBody$outboundSchema;
    /** @deprecated use `CreateTransactionTransactionManagerResponse500ResponseBody$Outbound` instead. */
    export type Outbound = CreateTransactionTransactionManagerResponse500ResponseBody$Outbound;
}

/** @internal */
export const CreateTransactionTransactionManagerResponseResponseBody$inboundSchema: z.ZodType<
    CreateTransactionTransactionManagerResponseResponseBody,
    z.ZodTypeDef,
    unknown
> = ReplacementGasPriceUnderpriced$inboundSchema;

/** @internal */
export type CreateTransactionTransactionManagerResponseResponseBody$Outbound =
    ReplacementGasPriceUnderpriced$Outbound;

/** @internal */
export const CreateTransactionTransactionManagerResponseResponseBody$outboundSchema: z.ZodType<
    CreateTransactionTransactionManagerResponseResponseBody$Outbound,
    z.ZodTypeDef,
    CreateTransactionTransactionManagerResponseResponseBody
> = ReplacementGasPriceUnderpriced$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTransactionTransactionManagerResponseResponseBody$ {
    /** @deprecated use `CreateTransactionTransactionManagerResponseResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        CreateTransactionTransactionManagerResponseResponseBody$inboundSchema;
    /** @deprecated use `CreateTransactionTransactionManagerResponseResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        CreateTransactionTransactionManagerResponseResponseBody$outboundSchema;
    /** @deprecated use `CreateTransactionTransactionManagerResponseResponseBody$Outbound` instead. */
    export type Outbound = CreateTransactionTransactionManagerResponseResponseBody$Outbound;
}

/** @internal */
export const CreateTransactionTransactionManagerResponseBody$inboundSchema: z.ZodType<
    CreateTransactionTransactionManagerResponseBody,
    z.ZodTypeDef,
    unknown
> = CouldNotFindResource$inboundSchema;

/** @internal */
export type CreateTransactionTransactionManagerResponseBody$Outbound =
    CouldNotFindResource$Outbound;

/** @internal */
export const CreateTransactionTransactionManagerResponseBody$outboundSchema: z.ZodType<
    CreateTransactionTransactionManagerResponseBody$Outbound,
    z.ZodTypeDef,
    CreateTransactionTransactionManagerResponseBody
> = CouldNotFindResource$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTransactionTransactionManagerResponseBody$ {
    /** @deprecated use `CreateTransactionTransactionManagerResponseBody$inboundSchema` instead. */
    export const inboundSchema = CreateTransactionTransactionManagerResponseBody$inboundSchema;
    /** @deprecated use `CreateTransactionTransactionManagerResponseBody$outboundSchema` instead. */
    export const outboundSchema = CreateTransactionTransactionManagerResponseBody$outboundSchema;
    /** @deprecated use `CreateTransactionTransactionManagerResponseBody$Outbound` instead. */
    export type Outbound = CreateTransactionTransactionManagerResponseBody$Outbound;
}

/** @internal */
export const CreateTransactionResponseBody$inboundSchema: z.ZodType<
    CreateTransactionResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    NonceExpired$inboundSchema,
    ExecutionWillFail$inboundSchema,
    InvalidGasPrice$inboundSchema,
    InsufficientFunds$inboundSchema,
    AlreadyKnown$inboundSchema,
    UnpredictableGasLimit$inboundSchema,
    BadRequestException$inboundSchema,
]);

/** @internal */
export type CreateTransactionResponseBody$Outbound =
    | NonceExpired$Outbound
    | ExecutionWillFail$Outbound
    | InvalidGasPrice$Outbound
    | InsufficientFunds$Outbound
    | AlreadyKnown$Outbound
    | UnpredictableGasLimit$Outbound
    | BadRequestException$Outbound;

/** @internal */
export const CreateTransactionResponseBody$outboundSchema: z.ZodType<
    CreateTransactionResponseBody$Outbound,
    z.ZodTypeDef,
    CreateTransactionResponseBody
> = z.union([
    NonceExpired$outboundSchema,
    ExecutionWillFail$outboundSchema,
    InvalidGasPrice$outboundSchema,
    InsufficientFunds$outboundSchema,
    AlreadyKnown$outboundSchema,
    UnpredictableGasLimit$outboundSchema,
    BadRequestException$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTransactionResponseBody$ {
    /** @deprecated use `CreateTransactionResponseBody$inboundSchema` instead. */
    export const inboundSchema = CreateTransactionResponseBody$inboundSchema;
    /** @deprecated use `CreateTransactionResponseBody$outboundSchema` instead. */
    export const outboundSchema = CreateTransactionResponseBody$outboundSchema;
    /** @deprecated use `CreateTransactionResponseBody$Outbound` instead. */
    export type Outbound = CreateTransactionResponseBody$Outbound;
}
