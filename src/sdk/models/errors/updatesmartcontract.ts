/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import {
  CouldNotFindResource,
  CouldNotFindResource$inboundSchema,
  CouldNotFindResource$Outbound,
  CouldNotFindResource$outboundSchema,
} from "./couldnotfindresource.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type UpdateSmartContractSmartContractManagementResponseBody =
  CouldNotFindResource;

export type UpdateSmartContractResponseBody = BadRequestException;

/** @internal */
export const UpdateSmartContractSmartContractManagementResponseBody$inboundSchema:
  z.ZodType<
    UpdateSmartContractSmartContractManagementResponseBody,
    z.ZodTypeDef,
    unknown
  > = CouldNotFindResource$inboundSchema;

/** @internal */
export type UpdateSmartContractSmartContractManagementResponseBody$Outbound =
  CouldNotFindResource$Outbound;

/** @internal */
export const UpdateSmartContractSmartContractManagementResponseBody$outboundSchema:
  z.ZodType<
    UpdateSmartContractSmartContractManagementResponseBody$Outbound,
    z.ZodTypeDef,
    UpdateSmartContractSmartContractManagementResponseBody
  > = CouldNotFindResource$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSmartContractSmartContractManagementResponseBody$ {
  /** @deprecated use `UpdateSmartContractSmartContractManagementResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    UpdateSmartContractSmartContractManagementResponseBody$inboundSchema;
  /** @deprecated use `UpdateSmartContractSmartContractManagementResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    UpdateSmartContractSmartContractManagementResponseBody$outboundSchema;
  /** @deprecated use `UpdateSmartContractSmartContractManagementResponseBody$Outbound` instead. */
  export type Outbound =
    UpdateSmartContractSmartContractManagementResponseBody$Outbound;
}

export function updateSmartContractSmartContractManagementResponseBodyToJSON(
  updateSmartContractSmartContractManagementResponseBody:
    UpdateSmartContractSmartContractManagementResponseBody,
): string {
  return JSON.stringify(
    UpdateSmartContractSmartContractManagementResponseBody$outboundSchema.parse(
      updateSmartContractSmartContractManagementResponseBody,
    ),
  );
}

export function updateSmartContractSmartContractManagementResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateSmartContractSmartContractManagementResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateSmartContractSmartContractManagementResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateSmartContractSmartContractManagementResponseBody' from JSON`,
  );
}

/** @internal */
export const UpdateSmartContractResponseBody$inboundSchema: z.ZodType<
  UpdateSmartContractResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type UpdateSmartContractResponseBody$Outbound =
  BadRequestException$Outbound;

/** @internal */
export const UpdateSmartContractResponseBody$outboundSchema: z.ZodType<
  UpdateSmartContractResponseBody$Outbound,
  z.ZodTypeDef,
  UpdateSmartContractResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSmartContractResponseBody$ {
  /** @deprecated use `UpdateSmartContractResponseBody$inboundSchema` instead. */
  export const inboundSchema = UpdateSmartContractResponseBody$inboundSchema;
  /** @deprecated use `UpdateSmartContractResponseBody$outboundSchema` instead. */
  export const outboundSchema = UpdateSmartContractResponseBody$outboundSchema;
  /** @deprecated use `UpdateSmartContractResponseBody$Outbound` instead. */
  export type Outbound = UpdateSmartContractResponseBody$Outbound;
}

export function updateSmartContractResponseBodyToJSON(
  updateSmartContractResponseBody: UpdateSmartContractResponseBody,
): string {
  return JSON.stringify(
    UpdateSmartContractResponseBody$outboundSchema.parse(
      updateSmartContractResponseBody,
    ),
  );
}

export function updateSmartContractResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSmartContractResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSmartContractResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSmartContractResponseBody' from JSON`,
  );
}
