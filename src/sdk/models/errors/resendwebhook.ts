/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import {
  CouldNotFindResource,
  CouldNotFindResource$inboundSchema,
  CouldNotFindResource$Outbound,
  CouldNotFindResource$outboundSchema,
} from "./couldnotfindresource.js";
import {
  CouldNotResendWebhook,
  CouldNotResendWebhook$inboundSchema,
  CouldNotResendWebhook$Outbound,
  CouldNotResendWebhook$outboundSchema,
} from "./couldnotresendwebhook.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type ResendWebhookWebhookResponseResponseBody = CouldNotResendWebhook;

export type ResendWebhookWebhookResponseBody = CouldNotFindResource;

export type ResendWebhookResponseBody = BadRequestException;

/** @internal */
export const ResendWebhookWebhookResponseResponseBody$inboundSchema: z.ZodType<
  ResendWebhookWebhookResponseResponseBody,
  z.ZodTypeDef,
  unknown
> = CouldNotResendWebhook$inboundSchema;

/** @internal */
export type ResendWebhookWebhookResponseResponseBody$Outbound =
  CouldNotResendWebhook$Outbound;

/** @internal */
export const ResendWebhookWebhookResponseResponseBody$outboundSchema: z.ZodType<
  ResendWebhookWebhookResponseResponseBody$Outbound,
  z.ZodTypeDef,
  ResendWebhookWebhookResponseResponseBody
> = CouldNotResendWebhook$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResendWebhookWebhookResponseResponseBody$ {
  /** @deprecated use `ResendWebhookWebhookResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ResendWebhookWebhookResponseResponseBody$inboundSchema;
  /** @deprecated use `ResendWebhookWebhookResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ResendWebhookWebhookResponseResponseBody$outboundSchema;
  /** @deprecated use `ResendWebhookWebhookResponseResponseBody$Outbound` instead. */
  export type Outbound = ResendWebhookWebhookResponseResponseBody$Outbound;
}

export function resendWebhookWebhookResponseResponseBodyToJSON(
  resendWebhookWebhookResponseResponseBody:
    ResendWebhookWebhookResponseResponseBody,
): string {
  return JSON.stringify(
    ResendWebhookWebhookResponseResponseBody$outboundSchema.parse(
      resendWebhookWebhookResponseResponseBody,
    ),
  );
}

export function resendWebhookWebhookResponseResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ResendWebhookWebhookResponseResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ResendWebhookWebhookResponseResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ResendWebhookWebhookResponseResponseBody' from JSON`,
  );
}

/** @internal */
export const ResendWebhookWebhookResponseBody$inboundSchema: z.ZodType<
  ResendWebhookWebhookResponseBody,
  z.ZodTypeDef,
  unknown
> = CouldNotFindResource$inboundSchema;

/** @internal */
export type ResendWebhookWebhookResponseBody$Outbound =
  CouldNotFindResource$Outbound;

/** @internal */
export const ResendWebhookWebhookResponseBody$outboundSchema: z.ZodType<
  ResendWebhookWebhookResponseBody$Outbound,
  z.ZodTypeDef,
  ResendWebhookWebhookResponseBody
> = CouldNotFindResource$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResendWebhookWebhookResponseBody$ {
  /** @deprecated use `ResendWebhookWebhookResponseBody$inboundSchema` instead. */
  export const inboundSchema = ResendWebhookWebhookResponseBody$inboundSchema;
  /** @deprecated use `ResendWebhookWebhookResponseBody$outboundSchema` instead. */
  export const outboundSchema = ResendWebhookWebhookResponseBody$outboundSchema;
  /** @deprecated use `ResendWebhookWebhookResponseBody$Outbound` instead. */
  export type Outbound = ResendWebhookWebhookResponseBody$Outbound;
}

export function resendWebhookWebhookResponseBodyToJSON(
  resendWebhookWebhookResponseBody: ResendWebhookWebhookResponseBody,
): string {
  return JSON.stringify(
    ResendWebhookWebhookResponseBody$outboundSchema.parse(
      resendWebhookWebhookResponseBody,
    ),
  );
}

export function resendWebhookWebhookResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ResendWebhookWebhookResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResendWebhookWebhookResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResendWebhookWebhookResponseBody' from JSON`,
  );
}

/** @internal */
export const ResendWebhookResponseBody$inboundSchema: z.ZodType<
  ResendWebhookResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type ResendWebhookResponseBody$Outbound = BadRequestException$Outbound;

/** @internal */
export const ResendWebhookResponseBody$outboundSchema: z.ZodType<
  ResendWebhookResponseBody$Outbound,
  z.ZodTypeDef,
  ResendWebhookResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResendWebhookResponseBody$ {
  /** @deprecated use `ResendWebhookResponseBody$inboundSchema` instead. */
  export const inboundSchema = ResendWebhookResponseBody$inboundSchema;
  /** @deprecated use `ResendWebhookResponseBody$outboundSchema` instead. */
  export const outboundSchema = ResendWebhookResponseBody$outboundSchema;
  /** @deprecated use `ResendWebhookResponseBody$Outbound` instead. */
  export type Outbound = ResendWebhookResponseBody$Outbound;
}

export function resendWebhookResponseBodyToJSON(
  resendWebhookResponseBody: ResendWebhookResponseBody,
): string {
  return JSON.stringify(
    ResendWebhookResponseBody$outboundSchema.parse(resendWebhookResponseBody),
  );
}

export function resendWebhookResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ResendWebhookResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResendWebhookResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResendWebhookResponseBody' from JSON`,
  );
}
