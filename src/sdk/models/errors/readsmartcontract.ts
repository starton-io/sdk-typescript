/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { BadRequestException, BadRequestException$ } from "./badrequestexception";
import { CallException, CallException$ } from "./callexception";
import { CouldNotFindResource, CouldNotFindResource$ } from "./couldnotfindresource";
import { EnsNotSupported, EnsNotSupported$ } from "./ensnotsupported";
import { ExecutionWillFail, ExecutionWillFail$ } from "./executionwillfail";
import { InvalidAbi, InvalidAbi$ } from "./invalidabi";
import { InvalidArgument, InvalidArgument$ } from "./invalidargument";
import { InvalidBytecode, InvalidBytecode$ } from "./invalidbytecode";
import { InvalidFunction, InvalidFunction$ } from "./invalidfunction";
import { MissingArgument, MissingArgument$ } from "./missingargument";
import { NumericFault, NumericFault$ } from "./numericfault";
import { UnexpectedArgument, UnexpectedArgument$ } from "./unexpectedargument";
import { Unknown, Unknown$ } from "./unknown";
import * as z from "zod";

export type ReadSmartContractSmartContractManagementResponseResponseBody = Unknown;

export type ReadSmartContractSmartContractManagementResponseBody = CouldNotFindResource;

export type ReadSmartContractResponseBody =
    | InvalidBytecode
    | InvalidAbi
    | InvalidFunction
    | MissingArgument
    | UnexpectedArgument
    | InvalidArgument
    | CallException
    | NumericFault
    | ExecutionWillFail
    | EnsNotSupported
    | BadRequestException;

/** @internal */
export namespace ReadSmartContractSmartContractManagementResponseResponseBody$ {
    export type Inbound = Unknown$.Inbound;

    export type Outbound = Unknown$.Outbound;
    export const inboundSchema: z.ZodType<
        ReadSmartContractSmartContractManagementResponseResponseBody,
        z.ZodTypeDef,
        Inbound
    > = Unknown$.inboundSchema;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ReadSmartContractSmartContractManagementResponseResponseBody
    > = Unknown$.outboundSchema;
}

/** @internal */
export namespace ReadSmartContractSmartContractManagementResponseBody$ {
    export type Inbound = CouldNotFindResource$.Inbound;

    export type Outbound = CouldNotFindResource$.Outbound;
    export const inboundSchema: z.ZodType<
        ReadSmartContractSmartContractManagementResponseBody,
        z.ZodTypeDef,
        Inbound
    > = CouldNotFindResource$.inboundSchema;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ReadSmartContractSmartContractManagementResponseBody
    > = CouldNotFindResource$.outboundSchema;
}

/** @internal */
export namespace ReadSmartContractResponseBody$ {
    export type Inbound =
        | InvalidBytecode$.Inbound
        | InvalidAbi$.Inbound
        | InvalidFunction$.Inbound
        | MissingArgument$.Inbound
        | UnexpectedArgument$.Inbound
        | InvalidArgument$.Inbound
        | CallException$.Inbound
        | NumericFault$.Inbound
        | ExecutionWillFail$.Inbound
        | EnsNotSupported$.Inbound
        | BadRequestException$.Inbound;

    export type Outbound =
        | InvalidBytecode$.Outbound
        | InvalidAbi$.Outbound
        | InvalidFunction$.Outbound
        | MissingArgument$.Outbound
        | UnexpectedArgument$.Outbound
        | InvalidArgument$.Outbound
        | CallException$.Outbound
        | NumericFault$.Outbound
        | ExecutionWillFail$.Outbound
        | EnsNotSupported$.Outbound
        | BadRequestException$.Outbound;
    export const inboundSchema: z.ZodType<ReadSmartContractResponseBody, z.ZodTypeDef, Inbound> =
        z.union([
            InvalidBytecode$.inboundSchema,
            InvalidAbi$.inboundSchema,
            InvalidFunction$.inboundSchema,
            MissingArgument$.inboundSchema,
            UnexpectedArgument$.inboundSchema,
            InvalidArgument$.inboundSchema,
            CallException$.inboundSchema,
            NumericFault$.inboundSchema,
            ExecutionWillFail$.inboundSchema,
            EnsNotSupported$.inboundSchema,
            BadRequestException$.inboundSchema,
        ]);
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReadSmartContractResponseBody> =
        z.union([
            InvalidBytecode$.outboundSchema,
            InvalidAbi$.outboundSchema,
            InvalidFunction$.outboundSchema,
            MissingArgument$.outboundSchema,
            UnexpectedArgument$.outboundSchema,
            InvalidArgument$.outboundSchema,
            CallException$.outboundSchema,
            NumericFault$.outboundSchema,
            ExecutionWillFail$.outboundSchema,
            EnsNotSupported$.outboundSchema,
            BadRequestException$.outboundSchema,
        ]);
}
