/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetAllWebhookResponseBody = BadRequestException;

/** @internal */
export const GetAllWebhookResponseBody$inboundSchema: z.ZodType<
  GetAllWebhookResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type GetAllWebhookResponseBody$Outbound = BadRequestException$Outbound;

/** @internal */
export const GetAllWebhookResponseBody$outboundSchema: z.ZodType<
  GetAllWebhookResponseBody$Outbound,
  z.ZodTypeDef,
  GetAllWebhookResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllWebhookResponseBody$ {
  /** @deprecated use `GetAllWebhookResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetAllWebhookResponseBody$inboundSchema;
  /** @deprecated use `GetAllWebhookResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetAllWebhookResponseBody$outboundSchema;
  /** @deprecated use `GetAllWebhookResponseBody$Outbound` instead. */
  export type Outbound = GetAllWebhookResponseBody$Outbound;
}

export function getAllWebhookResponseBodyToJSON(
  getAllWebhookResponseBody: GetAllWebhookResponseBody,
): string {
  return JSON.stringify(
    GetAllWebhookResponseBody$outboundSchema.parse(getAllWebhookResponseBody),
  );
}

export function getAllWebhookResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetAllWebhookResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAllWebhookResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAllWebhookResponseBody' from JSON`,
  );
}
