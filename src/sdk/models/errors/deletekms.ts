/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import {
  CouldNotFindResource,
  CouldNotFindResource$inboundSchema,
  CouldNotFindResource$Outbound,
  CouldNotFindResource$outboundSchema,
} from "./couldnotfindresource.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type DeleteKmsKmsResponseBody = CouldNotFindResource;

export type DeleteKmsResponseBody = BadRequestException;

/** @internal */
export const DeleteKmsKmsResponseBody$inboundSchema: z.ZodType<
  DeleteKmsKmsResponseBody,
  z.ZodTypeDef,
  unknown
> = CouldNotFindResource$inboundSchema;

/** @internal */
export type DeleteKmsKmsResponseBody$Outbound = CouldNotFindResource$Outbound;

/** @internal */
export const DeleteKmsKmsResponseBody$outboundSchema: z.ZodType<
  DeleteKmsKmsResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteKmsKmsResponseBody
> = CouldNotFindResource$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteKmsKmsResponseBody$ {
  /** @deprecated use `DeleteKmsKmsResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteKmsKmsResponseBody$inboundSchema;
  /** @deprecated use `DeleteKmsKmsResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteKmsKmsResponseBody$outboundSchema;
  /** @deprecated use `DeleteKmsKmsResponseBody$Outbound` instead. */
  export type Outbound = DeleteKmsKmsResponseBody$Outbound;
}

export function deleteKmsKmsResponseBodyToJSON(
  deleteKmsKmsResponseBody: DeleteKmsKmsResponseBody,
): string {
  return JSON.stringify(
    DeleteKmsKmsResponseBody$outboundSchema.parse(deleteKmsKmsResponseBody),
  );
}

export function deleteKmsKmsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteKmsKmsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteKmsKmsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteKmsKmsResponseBody' from JSON`,
  );
}

/** @internal */
export const DeleteKmsResponseBody$inboundSchema: z.ZodType<
  DeleteKmsResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type DeleteKmsResponseBody$Outbound = BadRequestException$Outbound;

/** @internal */
export const DeleteKmsResponseBody$outboundSchema: z.ZodType<
  DeleteKmsResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteKmsResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteKmsResponseBody$ {
  /** @deprecated use `DeleteKmsResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteKmsResponseBody$inboundSchema;
  /** @deprecated use `DeleteKmsResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteKmsResponseBody$outboundSchema;
  /** @deprecated use `DeleteKmsResponseBody$Outbound` instead. */
  export type Outbound = DeleteKmsResponseBody$Outbound;
}

export function deleteKmsResponseBodyToJSON(
  deleteKmsResponseBody: DeleteKmsResponseBody,
): string {
  return JSON.stringify(
    DeleteKmsResponseBody$outboundSchema.parse(deleteKmsResponseBody),
  );
}

export function deleteKmsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteKmsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteKmsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteKmsResponseBody' from JSON`,
  );
}
