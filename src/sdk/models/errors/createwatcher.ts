/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { BadRequestException, BadRequestException$ } from "./badrequestexception";
import { DatabaseDuplicate, DatabaseDuplicate$ } from "./databaseduplicate";
import { MicroserviceNotResponding, MicroserviceNotResponding$ } from "./microservicenotresponding";
import { ServerNotResponding, ServerNotResponding$ } from "./servernotresponding";
import * as z from "zod";

export type CreateWatcherMonitorResponse500ResponseBody = MicroserviceNotResponding;

export type CreateWatcherMonitorResponseResponseBody = ServerNotResponding;

export type CreateWatcherMonitorResponseBody = DatabaseDuplicate;

export type CreateWatcherResponseBody = BadRequestException;

/** @internal */
export namespace CreateWatcherMonitorResponse500ResponseBody$ {
    export type Inbound = MicroserviceNotResponding$.Inbound;

    export type Outbound = MicroserviceNotResponding$.Outbound;
    export const inboundSchema: z.ZodType<
        CreateWatcherMonitorResponse500ResponseBody,
        z.ZodTypeDef,
        Inbound
    > = MicroserviceNotResponding$.inboundSchema;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateWatcherMonitorResponse500ResponseBody
    > = MicroserviceNotResponding$.outboundSchema;
}

/** @internal */
export namespace CreateWatcherMonitorResponseResponseBody$ {
    export type Inbound = ServerNotResponding$.Inbound;

    export type Outbound = ServerNotResponding$.Outbound;
    export const inboundSchema: z.ZodType<
        CreateWatcherMonitorResponseResponseBody,
        z.ZodTypeDef,
        Inbound
    > = ServerNotResponding$.inboundSchema;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateWatcherMonitorResponseResponseBody
    > = ServerNotResponding$.outboundSchema;
}

/** @internal */
export namespace CreateWatcherMonitorResponseBody$ {
    export type Inbound = DatabaseDuplicate$.Inbound;

    export type Outbound = DatabaseDuplicate$.Outbound;
    export const inboundSchema: z.ZodType<CreateWatcherMonitorResponseBody, z.ZodTypeDef, Inbound> =
        DatabaseDuplicate$.inboundSchema;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateWatcherMonitorResponseBody
    > = DatabaseDuplicate$.outboundSchema;
}

/** @internal */
export namespace CreateWatcherResponseBody$ {
    export type Inbound = BadRequestException$.Inbound;

    export type Outbound = BadRequestException$.Outbound;
    export const inboundSchema: z.ZodType<CreateWatcherResponseBody, z.ZodTypeDef, Inbound> =
        BadRequestException$.inboundSchema;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateWatcherResponseBody> =
        BadRequestException$.outboundSchema;
}
