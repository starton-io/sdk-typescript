/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import {
  DatabaseDuplicate,
  DatabaseDuplicate$inboundSchema,
  DatabaseDuplicate$Outbound,
  DatabaseDuplicate$outboundSchema,
} from "./databaseduplicate.js";
import {
  MicroserviceNotResponding,
  MicroserviceNotResponding$inboundSchema,
  MicroserviceNotResponding$Outbound,
  MicroserviceNotResponding$outboundSchema,
} from "./microservicenotresponding.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
import {
  ServerNotResponding,
  ServerNotResponding$inboundSchema,
  ServerNotResponding$Outbound,
  ServerNotResponding$outboundSchema,
} from "./servernotresponding.js";

export type CreateWatcherMonitorResponse500ResponseBody =
  MicroserviceNotResponding;

export type CreateWatcherMonitorResponseResponseBody = ServerNotResponding;

export type CreateWatcherMonitorResponseBody = DatabaseDuplicate;

export type CreateWatcherResponseBody = BadRequestException;

/** @internal */
export const CreateWatcherMonitorResponse500ResponseBody$inboundSchema:
  z.ZodType<
    CreateWatcherMonitorResponse500ResponseBody,
    z.ZodTypeDef,
    unknown
  > = MicroserviceNotResponding$inboundSchema;

/** @internal */
export type CreateWatcherMonitorResponse500ResponseBody$Outbound =
  MicroserviceNotResponding$Outbound;

/** @internal */
export const CreateWatcherMonitorResponse500ResponseBody$outboundSchema:
  z.ZodType<
    CreateWatcherMonitorResponse500ResponseBody$Outbound,
    z.ZodTypeDef,
    CreateWatcherMonitorResponse500ResponseBody
  > = MicroserviceNotResponding$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWatcherMonitorResponse500ResponseBody$ {
  /** @deprecated use `CreateWatcherMonitorResponse500ResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    CreateWatcherMonitorResponse500ResponseBody$inboundSchema;
  /** @deprecated use `CreateWatcherMonitorResponse500ResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateWatcherMonitorResponse500ResponseBody$outboundSchema;
  /** @deprecated use `CreateWatcherMonitorResponse500ResponseBody$Outbound` instead. */
  export type Outbound = CreateWatcherMonitorResponse500ResponseBody$Outbound;
}

export function createWatcherMonitorResponse500ResponseBodyToJSON(
  createWatcherMonitorResponse500ResponseBody:
    CreateWatcherMonitorResponse500ResponseBody,
): string {
  return JSON.stringify(
    CreateWatcherMonitorResponse500ResponseBody$outboundSchema.parse(
      createWatcherMonitorResponse500ResponseBody,
    ),
  );
}

export function createWatcherMonitorResponse500ResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateWatcherMonitorResponse500ResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateWatcherMonitorResponse500ResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateWatcherMonitorResponse500ResponseBody' from JSON`,
  );
}

/** @internal */
export const CreateWatcherMonitorResponseResponseBody$inboundSchema: z.ZodType<
  CreateWatcherMonitorResponseResponseBody,
  z.ZodTypeDef,
  unknown
> = ServerNotResponding$inboundSchema;

/** @internal */
export type CreateWatcherMonitorResponseResponseBody$Outbound =
  ServerNotResponding$Outbound;

/** @internal */
export const CreateWatcherMonitorResponseResponseBody$outboundSchema: z.ZodType<
  CreateWatcherMonitorResponseResponseBody$Outbound,
  z.ZodTypeDef,
  CreateWatcherMonitorResponseResponseBody
> = ServerNotResponding$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWatcherMonitorResponseResponseBody$ {
  /** @deprecated use `CreateWatcherMonitorResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    CreateWatcherMonitorResponseResponseBody$inboundSchema;
  /** @deprecated use `CreateWatcherMonitorResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateWatcherMonitorResponseResponseBody$outboundSchema;
  /** @deprecated use `CreateWatcherMonitorResponseResponseBody$Outbound` instead. */
  export type Outbound = CreateWatcherMonitorResponseResponseBody$Outbound;
}

export function createWatcherMonitorResponseResponseBodyToJSON(
  createWatcherMonitorResponseResponseBody:
    CreateWatcherMonitorResponseResponseBody,
): string {
  return JSON.stringify(
    CreateWatcherMonitorResponseResponseBody$outboundSchema.parse(
      createWatcherMonitorResponseResponseBody,
    ),
  );
}

export function createWatcherMonitorResponseResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateWatcherMonitorResponseResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateWatcherMonitorResponseResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateWatcherMonitorResponseResponseBody' from JSON`,
  );
}

/** @internal */
export const CreateWatcherMonitorResponseBody$inboundSchema: z.ZodType<
  CreateWatcherMonitorResponseBody,
  z.ZodTypeDef,
  unknown
> = DatabaseDuplicate$inboundSchema;

/** @internal */
export type CreateWatcherMonitorResponseBody$Outbound =
  DatabaseDuplicate$Outbound;

/** @internal */
export const CreateWatcherMonitorResponseBody$outboundSchema: z.ZodType<
  CreateWatcherMonitorResponseBody$Outbound,
  z.ZodTypeDef,
  CreateWatcherMonitorResponseBody
> = DatabaseDuplicate$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWatcherMonitorResponseBody$ {
  /** @deprecated use `CreateWatcherMonitorResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateWatcherMonitorResponseBody$inboundSchema;
  /** @deprecated use `CreateWatcherMonitorResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateWatcherMonitorResponseBody$outboundSchema;
  /** @deprecated use `CreateWatcherMonitorResponseBody$Outbound` instead. */
  export type Outbound = CreateWatcherMonitorResponseBody$Outbound;
}

export function createWatcherMonitorResponseBodyToJSON(
  createWatcherMonitorResponseBody: CreateWatcherMonitorResponseBody,
): string {
  return JSON.stringify(
    CreateWatcherMonitorResponseBody$outboundSchema.parse(
      createWatcherMonitorResponseBody,
    ),
  );
}

export function createWatcherMonitorResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateWatcherMonitorResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateWatcherMonitorResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateWatcherMonitorResponseBody' from JSON`,
  );
}

/** @internal */
export const CreateWatcherResponseBody$inboundSchema: z.ZodType<
  CreateWatcherResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type CreateWatcherResponseBody$Outbound = BadRequestException$Outbound;

/** @internal */
export const CreateWatcherResponseBody$outboundSchema: z.ZodType<
  CreateWatcherResponseBody$Outbound,
  z.ZodTypeDef,
  CreateWatcherResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWatcherResponseBody$ {
  /** @deprecated use `CreateWatcherResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateWatcherResponseBody$inboundSchema;
  /** @deprecated use `CreateWatcherResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateWatcherResponseBody$outboundSchema;
  /** @deprecated use `CreateWatcherResponseBody$Outbound` instead. */
  export type Outbound = CreateWatcherResponseBody$Outbound;
}

export function createWatcherResponseBodyToJSON(
  createWatcherResponseBody: CreateWatcherResponseBody,
): string {
  return JSON.stringify(
    CreateWatcherResponseBody$outboundSchema.parse(createWatcherResponseBody),
  );
}

export function createWatcherResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateWatcherResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateWatcherResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateWatcherResponseBody' from JSON`,
  );
}
