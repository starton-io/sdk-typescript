/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type SchemasUNPREDICTABLEGASLIMITContext = {};

export type UnpredictableGasLimitData = {
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse?: Response | undefined;
  context?: SchemasUNPREDICTABLEGASLIMITContext | null | undefined;
  errorCode?: string;
  message?: string;
  path: string;
  statusCode?: number;
  timestamp: string;
};

export class UnpredictableGasLimit extends Error {
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse?: Response | undefined;
  context?: SchemasUNPREDICTABLEGASLIMITContext | null | undefined;
  errorCode?: string;
  path: string;
  statusCode?: number;
  timestamp: string;

  /** The original data that was passed to this error instance. */
  data$: UnpredictableGasLimitData;

  constructor(err: UnpredictableGasLimitData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.rawResponse != null) this.rawResponse = err.rawResponse;
    if (err.context != null) this.context = err.context;
    if (err.errorCode != null) this.errorCode = err.errorCode;
    this.path = err.path;
    if (err.statusCode != null) this.statusCode = err.statusCode;
    this.timestamp = err.timestamp;

    this.name = "UnpredictableGasLimit";
  }
}

/** @internal */
export const SchemasUNPREDICTABLEGASLIMITContext$inboundSchema: z.ZodType<
  SchemasUNPREDICTABLEGASLIMITContext,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type SchemasUNPREDICTABLEGASLIMITContext$Outbound = {};

/** @internal */
export const SchemasUNPREDICTABLEGASLIMITContext$outboundSchema: z.ZodType<
  SchemasUNPREDICTABLEGASLIMITContext$Outbound,
  z.ZodTypeDef,
  SchemasUNPREDICTABLEGASLIMITContext
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SchemasUNPREDICTABLEGASLIMITContext$ {
  /** @deprecated use `SchemasUNPREDICTABLEGASLIMITContext$inboundSchema` instead. */
  export const inboundSchema =
    SchemasUNPREDICTABLEGASLIMITContext$inboundSchema;
  /** @deprecated use `SchemasUNPREDICTABLEGASLIMITContext$outboundSchema` instead. */
  export const outboundSchema =
    SchemasUNPREDICTABLEGASLIMITContext$outboundSchema;
  /** @deprecated use `SchemasUNPREDICTABLEGASLIMITContext$Outbound` instead. */
  export type Outbound = SchemasUNPREDICTABLEGASLIMITContext$Outbound;
}

/** @internal */
export const UnpredictableGasLimit$inboundSchema: z.ZodType<
  UnpredictableGasLimit,
  z.ZodTypeDef,
  unknown
> = z.object({
  RawResponse: z.instanceof(Response).optional(),
  context: z.nullable(
    z.lazy(() => SchemasUNPREDICTABLEGASLIMITContext$inboundSchema),
  ).optional(),
  errorCode: z.string().default("UNPREDICTABLE_GAS_LIMIT"),
  message: z.string().default(
    "Could not estimate gas limit for this transaction.",
  ),
  path: z.string(),
  statusCode: z.number().default(400),
  timestamp: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "RawResponse": "rawResponse",
    });

    return new UnpredictableGasLimit(remapped);
  });

/** @internal */
export type UnpredictableGasLimit$Outbound = {
  RawResponse?: never | undefined;
  context?: SchemasUNPREDICTABLEGASLIMITContext$Outbound | null | undefined;
  errorCode?: string;
  message?: string;
  path: string;
  statusCode?: number;
  timestamp: string;
};

/** @internal */
export const UnpredictableGasLimit$outboundSchema: z.ZodType<
  UnpredictableGasLimit$Outbound,
  z.ZodTypeDef,
  UnpredictableGasLimit
> = z.instanceof(UnpredictableGasLimit)
  .transform(v => v.data$)
  .pipe(
    z.object({
      rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
      }).optional(),
      context: z.nullable(
        z.lazy(() => SchemasUNPREDICTABLEGASLIMITContext$outboundSchema),
      ).optional(),
      errorCode: z.string().default("UNPREDICTABLE_GAS_LIMIT"),
      message: z.string().default(
        "Could not estimate gas limit for this transaction.",
      ),
      path: z.string(),
      statusCode: z.number().default(400),
      timestamp: z.string(),
    }).transform((v) => {
      return remap$(v, {
        rawResponse: "RawResponse",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnpredictableGasLimit$ {
  /** @deprecated use `UnpredictableGasLimit$inboundSchema` instead. */
  export const inboundSchema = UnpredictableGasLimit$inboundSchema;
  /** @deprecated use `UnpredictableGasLimit$outboundSchema` instead. */
  export const outboundSchema = UnpredictableGasLimit$outboundSchema;
  /** @deprecated use `UnpredictableGasLimit$Outbound` instead. */
  export type Outbound = UnpredictableGasLimit$Outbound;
}
