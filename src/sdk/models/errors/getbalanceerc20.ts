/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetBalanceErc20ResponseBody = BadRequestException;

/** @internal */
export const GetBalanceErc20ResponseBody$inboundSchema: z.ZodType<
  GetBalanceErc20ResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type GetBalanceErc20ResponseBody$Outbound = BadRequestException$Outbound;

/** @internal */
export const GetBalanceErc20ResponseBody$outboundSchema: z.ZodType<
  GetBalanceErc20ResponseBody$Outbound,
  z.ZodTypeDef,
  GetBalanceErc20ResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBalanceErc20ResponseBody$ {
  /** @deprecated use `GetBalanceErc20ResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetBalanceErc20ResponseBody$inboundSchema;
  /** @deprecated use `GetBalanceErc20ResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetBalanceErc20ResponseBody$outboundSchema;
  /** @deprecated use `GetBalanceErc20ResponseBody$Outbound` instead. */
  export type Outbound = GetBalanceErc20ResponseBody$Outbound;
}

export function getBalanceErc20ResponseBodyToJSON(
  getBalanceErc20ResponseBody: GetBalanceErc20ResponseBody,
): string {
  return JSON.stringify(
    GetBalanceErc20ResponseBody$outboundSchema.parse(
      getBalanceErc20ResponseBody,
    ),
  );
}

export function getBalanceErc20ResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetBalanceErc20ResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBalanceErc20ResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBalanceErc20ResponseBody' from JSON`,
  );
}
