/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import {
  CouldNotFindResource,
  CouldNotFindResource$inboundSchema,
  CouldNotFindResource$Outbound,
  CouldNotFindResource$outboundSchema,
} from "./couldnotfindresource.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type UpdatePinIpfsResponseBody = CouldNotFindResource;

export type UpdatePinResponseBody = BadRequestException;

/** @internal */
export const UpdatePinIpfsResponseBody$inboundSchema: z.ZodType<
  UpdatePinIpfsResponseBody,
  z.ZodTypeDef,
  unknown
> = CouldNotFindResource$inboundSchema;

/** @internal */
export type UpdatePinIpfsResponseBody$Outbound = CouldNotFindResource$Outbound;

/** @internal */
export const UpdatePinIpfsResponseBody$outboundSchema: z.ZodType<
  UpdatePinIpfsResponseBody$Outbound,
  z.ZodTypeDef,
  UpdatePinIpfsResponseBody
> = CouldNotFindResource$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePinIpfsResponseBody$ {
  /** @deprecated use `UpdatePinIpfsResponseBody$inboundSchema` instead. */
  export const inboundSchema = UpdatePinIpfsResponseBody$inboundSchema;
  /** @deprecated use `UpdatePinIpfsResponseBody$outboundSchema` instead. */
  export const outboundSchema = UpdatePinIpfsResponseBody$outboundSchema;
  /** @deprecated use `UpdatePinIpfsResponseBody$Outbound` instead. */
  export type Outbound = UpdatePinIpfsResponseBody$Outbound;
}

export function updatePinIpfsResponseBodyToJSON(
  updatePinIpfsResponseBody: UpdatePinIpfsResponseBody,
): string {
  return JSON.stringify(
    UpdatePinIpfsResponseBody$outboundSchema.parse(updatePinIpfsResponseBody),
  );
}

export function updatePinIpfsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePinIpfsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePinIpfsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePinIpfsResponseBody' from JSON`,
  );
}

/** @internal */
export const UpdatePinResponseBody$inboundSchema: z.ZodType<
  UpdatePinResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type UpdatePinResponseBody$Outbound = BadRequestException$Outbound;

/** @internal */
export const UpdatePinResponseBody$outboundSchema: z.ZodType<
  UpdatePinResponseBody$Outbound,
  z.ZodTypeDef,
  UpdatePinResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePinResponseBody$ {
  /** @deprecated use `UpdatePinResponseBody$inboundSchema` instead. */
  export const inboundSchema = UpdatePinResponseBody$inboundSchema;
  /** @deprecated use `UpdatePinResponseBody$outboundSchema` instead. */
  export const outboundSchema = UpdatePinResponseBody$outboundSchema;
  /** @deprecated use `UpdatePinResponseBody$Outbound` instead. */
  export type Outbound = UpdatePinResponseBody$Outbound;
}

export function updatePinResponseBodyToJSON(
  updatePinResponseBody: UpdatePinResponseBody,
): string {
  return JSON.stringify(
    UpdatePinResponseBody$outboundSchema.parse(updatePinResponseBody),
  );
}

export function updatePinResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePinResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePinResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePinResponseBody' from JSON`,
  );
}
