/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import {
  CouldNotFindResource,
  CouldNotFindResource$inboundSchema,
  CouldNotFindResource$Outbound,
  CouldNotFindResource$outboundSchema,
} from "./couldnotfindresource.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetOnePinIpfsResponseBody = CouldNotFindResource;

export type GetOnePinResponseBody = BadRequestException;

/** @internal */
export const GetOnePinIpfsResponseBody$inboundSchema: z.ZodType<
  GetOnePinIpfsResponseBody,
  z.ZodTypeDef,
  unknown
> = CouldNotFindResource$inboundSchema;

/** @internal */
export type GetOnePinIpfsResponseBody$Outbound = CouldNotFindResource$Outbound;

/** @internal */
export const GetOnePinIpfsResponseBody$outboundSchema: z.ZodType<
  GetOnePinIpfsResponseBody$Outbound,
  z.ZodTypeDef,
  GetOnePinIpfsResponseBody
> = CouldNotFindResource$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOnePinIpfsResponseBody$ {
  /** @deprecated use `GetOnePinIpfsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetOnePinIpfsResponseBody$inboundSchema;
  /** @deprecated use `GetOnePinIpfsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetOnePinIpfsResponseBody$outboundSchema;
  /** @deprecated use `GetOnePinIpfsResponseBody$Outbound` instead. */
  export type Outbound = GetOnePinIpfsResponseBody$Outbound;
}

export function getOnePinIpfsResponseBodyToJSON(
  getOnePinIpfsResponseBody: GetOnePinIpfsResponseBody,
): string {
  return JSON.stringify(
    GetOnePinIpfsResponseBody$outboundSchema.parse(getOnePinIpfsResponseBody),
  );
}

export function getOnePinIpfsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetOnePinIpfsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOnePinIpfsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOnePinIpfsResponseBody' from JSON`,
  );
}

/** @internal */
export const GetOnePinResponseBody$inboundSchema: z.ZodType<
  GetOnePinResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type GetOnePinResponseBody$Outbound = BadRequestException$Outbound;

/** @internal */
export const GetOnePinResponseBody$outboundSchema: z.ZodType<
  GetOnePinResponseBody$Outbound,
  z.ZodTypeDef,
  GetOnePinResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOnePinResponseBody$ {
  /** @deprecated use `GetOnePinResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetOnePinResponseBody$inboundSchema;
  /** @deprecated use `GetOnePinResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetOnePinResponseBody$outboundSchema;
  /** @deprecated use `GetOnePinResponseBody$Outbound` instead. */
  export type Outbound = GetOnePinResponseBody$Outbound;
}

export function getOnePinResponseBodyToJSON(
  getOnePinResponseBody: GetOnePinResponseBody,
): string {
  return JSON.stringify(
    GetOnePinResponseBody$outboundSchema.parse(getOnePinResponseBody),
  );
}

export function getOnePinResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetOnePinResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOnePinResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOnePinResponseBody' from JSON`,
  );
}
