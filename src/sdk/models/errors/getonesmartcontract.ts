/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  BadRequestException,
  BadRequestException$inboundSchema,
  BadRequestException$Outbound,
  BadRequestException$outboundSchema,
} from "./badrequestexception.js";
import {
  CouldNotFindResource,
  CouldNotFindResource$inboundSchema,
  CouldNotFindResource$Outbound,
  CouldNotFindResource$outboundSchema,
} from "./couldnotfindresource.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetOneSmartContractSmartContractManagementResponseBody =
  CouldNotFindResource;

export type GetOneSmartContractResponseBody = BadRequestException;

/** @internal */
export const GetOneSmartContractSmartContractManagementResponseBody$inboundSchema:
  z.ZodType<
    GetOneSmartContractSmartContractManagementResponseBody,
    z.ZodTypeDef,
    unknown
  > = CouldNotFindResource$inboundSchema;

/** @internal */
export type GetOneSmartContractSmartContractManagementResponseBody$Outbound =
  CouldNotFindResource$Outbound;

/** @internal */
export const GetOneSmartContractSmartContractManagementResponseBody$outboundSchema:
  z.ZodType<
    GetOneSmartContractSmartContractManagementResponseBody$Outbound,
    z.ZodTypeDef,
    GetOneSmartContractSmartContractManagementResponseBody
  > = CouldNotFindResource$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOneSmartContractSmartContractManagementResponseBody$ {
  /** @deprecated use `GetOneSmartContractSmartContractManagementResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetOneSmartContractSmartContractManagementResponseBody$inboundSchema;
  /** @deprecated use `GetOneSmartContractSmartContractManagementResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetOneSmartContractSmartContractManagementResponseBody$outboundSchema;
  /** @deprecated use `GetOneSmartContractSmartContractManagementResponseBody$Outbound` instead. */
  export type Outbound =
    GetOneSmartContractSmartContractManagementResponseBody$Outbound;
}

export function getOneSmartContractSmartContractManagementResponseBodyToJSON(
  getOneSmartContractSmartContractManagementResponseBody:
    GetOneSmartContractSmartContractManagementResponseBody,
): string {
  return JSON.stringify(
    GetOneSmartContractSmartContractManagementResponseBody$outboundSchema.parse(
      getOneSmartContractSmartContractManagementResponseBody,
    ),
  );
}

export function getOneSmartContractSmartContractManagementResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetOneSmartContractSmartContractManagementResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetOneSmartContractSmartContractManagementResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetOneSmartContractSmartContractManagementResponseBody' from JSON`,
  );
}

/** @internal */
export const GetOneSmartContractResponseBody$inboundSchema: z.ZodType<
  GetOneSmartContractResponseBody,
  z.ZodTypeDef,
  unknown
> = BadRequestException$inboundSchema;

/** @internal */
export type GetOneSmartContractResponseBody$Outbound =
  BadRequestException$Outbound;

/** @internal */
export const GetOneSmartContractResponseBody$outboundSchema: z.ZodType<
  GetOneSmartContractResponseBody$Outbound,
  z.ZodTypeDef,
  GetOneSmartContractResponseBody
> = BadRequestException$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOneSmartContractResponseBody$ {
  /** @deprecated use `GetOneSmartContractResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetOneSmartContractResponseBody$inboundSchema;
  /** @deprecated use `GetOneSmartContractResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetOneSmartContractResponseBody$outboundSchema;
  /** @deprecated use `GetOneSmartContractResponseBody$Outbound` instead. */
  export type Outbound = GetOneSmartContractResponseBody$Outbound;
}

export function getOneSmartContractResponseBodyToJSON(
  getOneSmartContractResponseBody: GetOneSmartContractResponseBody,
): string {
  return JSON.stringify(
    GetOneSmartContractResponseBody$outboundSchema.parse(
      getOneSmartContractResponseBody,
    ),
  );
}

export function getOneSmartContractResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetOneSmartContractResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOneSmartContractResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOneSmartContractResponseBody' from JSON`,
  );
}
