/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SchemasCOULDNOTFINDRESOURCEContext = {};

export type CouldNotFindResourceData = {
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse1?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse10?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse11?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse12?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse13?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse14?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse15?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse16?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse17?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse18?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse19?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse2?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse20?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse21?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse22?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse23?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse24?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse25?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse26?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse27?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse28?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse29?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse3?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse30?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse31?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse32?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse33?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse34?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse35?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse36?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse37?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse38?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse39?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse4?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse40?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse5?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse6?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse7?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse8?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse9?: Response | undefined;
    context?: SchemasCOULDNOTFINDRESOURCEContext | undefined;
    errorCode: string;
    message: string;
    path: string;
    statusCode: number;
    timestamp: string;
};

export class CouldNotFindResource extends Error {
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse1?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse10?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse11?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse12?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse13?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse14?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse15?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse16?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse17?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse18?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse19?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse2?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse20?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse21?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse22?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse23?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse24?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse25?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse26?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse27?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse28?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse29?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse3?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse30?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse31?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse32?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse33?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse34?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse35?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse36?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse37?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse38?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse39?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse4?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse40?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse5?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse6?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse7?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse8?: Response | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse9?: Response | undefined;
    context?: SchemasCOULDNOTFINDRESOURCEContext | undefined;
    errorCode: string;
    path: string;
    statusCode: number;
    timestamp: string;

    /** The original data that was passed to this error instance. */
    data$: CouldNotFindResourceData;

    constructor(err: CouldNotFindResourceData) {
        super("");
        this.data$ = err;

        if (err.rawResponse != null) {
            this.rawResponse = err.rawResponse;
        }
        if (err.rawResponse1 != null) {
            this.rawResponse1 = err.rawResponse1;
        }
        if (err.rawResponse10 != null) {
            this.rawResponse10 = err.rawResponse10;
        }
        if (err.rawResponse11 != null) {
            this.rawResponse11 = err.rawResponse11;
        }
        if (err.rawResponse12 != null) {
            this.rawResponse12 = err.rawResponse12;
        }
        if (err.rawResponse13 != null) {
            this.rawResponse13 = err.rawResponse13;
        }
        if (err.rawResponse14 != null) {
            this.rawResponse14 = err.rawResponse14;
        }
        if (err.rawResponse15 != null) {
            this.rawResponse15 = err.rawResponse15;
        }
        if (err.rawResponse16 != null) {
            this.rawResponse16 = err.rawResponse16;
        }
        if (err.rawResponse17 != null) {
            this.rawResponse17 = err.rawResponse17;
        }
        if (err.rawResponse18 != null) {
            this.rawResponse18 = err.rawResponse18;
        }
        if (err.rawResponse19 != null) {
            this.rawResponse19 = err.rawResponse19;
        }
        if (err.rawResponse2 != null) {
            this.rawResponse2 = err.rawResponse2;
        }
        if (err.rawResponse20 != null) {
            this.rawResponse20 = err.rawResponse20;
        }
        if (err.rawResponse21 != null) {
            this.rawResponse21 = err.rawResponse21;
        }
        if (err.rawResponse22 != null) {
            this.rawResponse22 = err.rawResponse22;
        }
        if (err.rawResponse23 != null) {
            this.rawResponse23 = err.rawResponse23;
        }
        if (err.rawResponse24 != null) {
            this.rawResponse24 = err.rawResponse24;
        }
        if (err.rawResponse25 != null) {
            this.rawResponse25 = err.rawResponse25;
        }
        if (err.rawResponse26 != null) {
            this.rawResponse26 = err.rawResponse26;
        }
        if (err.rawResponse27 != null) {
            this.rawResponse27 = err.rawResponse27;
        }
        if (err.rawResponse28 != null) {
            this.rawResponse28 = err.rawResponse28;
        }
        if (err.rawResponse29 != null) {
            this.rawResponse29 = err.rawResponse29;
        }
        if (err.rawResponse3 != null) {
            this.rawResponse3 = err.rawResponse3;
        }
        if (err.rawResponse30 != null) {
            this.rawResponse30 = err.rawResponse30;
        }
        if (err.rawResponse31 != null) {
            this.rawResponse31 = err.rawResponse31;
        }
        if (err.rawResponse32 != null) {
            this.rawResponse32 = err.rawResponse32;
        }
        if (err.rawResponse33 != null) {
            this.rawResponse33 = err.rawResponse33;
        }
        if (err.rawResponse34 != null) {
            this.rawResponse34 = err.rawResponse34;
        }
        if (err.rawResponse35 != null) {
            this.rawResponse35 = err.rawResponse35;
        }
        if (err.rawResponse36 != null) {
            this.rawResponse36 = err.rawResponse36;
        }
        if (err.rawResponse37 != null) {
            this.rawResponse37 = err.rawResponse37;
        }
        if (err.rawResponse38 != null) {
            this.rawResponse38 = err.rawResponse38;
        }
        if (err.rawResponse39 != null) {
            this.rawResponse39 = err.rawResponse39;
        }
        if (err.rawResponse4 != null) {
            this.rawResponse4 = err.rawResponse4;
        }
        if (err.rawResponse40 != null) {
            this.rawResponse40 = err.rawResponse40;
        }
        if (err.rawResponse5 != null) {
            this.rawResponse5 = err.rawResponse5;
        }
        if (err.rawResponse6 != null) {
            this.rawResponse6 = err.rawResponse6;
        }
        if (err.rawResponse7 != null) {
            this.rawResponse7 = err.rawResponse7;
        }
        if (err.rawResponse8 != null) {
            this.rawResponse8 = err.rawResponse8;
        }
        if (err.rawResponse9 != null) {
            this.rawResponse9 = err.rawResponse9;
        }
        if (err.context != null) {
            this.context = err.context;
        }
        this.errorCode = err.errorCode;
        this.path = err.path;
        this.statusCode = err.statusCode;
        this.timestamp = err.timestamp;

        this.message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : "API error occurred";

        this.name = "CouldNotFindResource";
    }
}

/** @internal */
export namespace SchemasCOULDNOTFINDRESOURCEContext$ {
    export const inboundSchema: z.ZodType<
        SchemasCOULDNOTFINDRESOURCEContext,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SchemasCOULDNOTFINDRESOURCEContext
    > = z.object({});
}

/** @internal */
export namespace CouldNotFindResource$ {
    export const inboundSchema: z.ZodType<CouldNotFindResource, z.ZodTypeDef, unknown> = z
        .object({
            RawResponse: z.instanceof(Response).optional(),
            RawResponse1: z.instanceof(Response).optional(),
            RawResponse10: z.instanceof(Response).optional(),
            RawResponse11: z.instanceof(Response).optional(),
            RawResponse12: z.instanceof(Response).optional(),
            RawResponse13: z.instanceof(Response).optional(),
            RawResponse14: z.instanceof(Response).optional(),
            RawResponse15: z.instanceof(Response).optional(),
            RawResponse16: z.instanceof(Response).optional(),
            RawResponse17: z.instanceof(Response).optional(),
            RawResponse18: z.instanceof(Response).optional(),
            RawResponse19: z.instanceof(Response).optional(),
            RawResponse2: z.instanceof(Response).optional(),
            RawResponse20: z.instanceof(Response).optional(),
            RawResponse21: z.instanceof(Response).optional(),
            RawResponse22: z.instanceof(Response).optional(),
            RawResponse23: z.instanceof(Response).optional(),
            RawResponse24: z.instanceof(Response).optional(),
            RawResponse25: z.instanceof(Response).optional(),
            RawResponse26: z.instanceof(Response).optional(),
            RawResponse27: z.instanceof(Response).optional(),
            RawResponse28: z.instanceof(Response).optional(),
            RawResponse29: z.instanceof(Response).optional(),
            RawResponse3: z.instanceof(Response).optional(),
            RawResponse30: z.instanceof(Response).optional(),
            RawResponse31: z.instanceof(Response).optional(),
            RawResponse32: z.instanceof(Response).optional(),
            RawResponse33: z.instanceof(Response).optional(),
            RawResponse34: z.instanceof(Response).optional(),
            RawResponse35: z.instanceof(Response).optional(),
            RawResponse36: z.instanceof(Response).optional(),
            RawResponse37: z.instanceof(Response).optional(),
            RawResponse38: z.instanceof(Response).optional(),
            RawResponse39: z.instanceof(Response).optional(),
            RawResponse4: z.instanceof(Response).optional(),
            RawResponse40: z.instanceof(Response).optional(),
            RawResponse5: z.instanceof(Response).optional(),
            RawResponse6: z.instanceof(Response).optional(),
            RawResponse7: z.instanceof(Response).optional(),
            RawResponse8: z.instanceof(Response).optional(),
            RawResponse9: z.instanceof(Response).optional(),
            context: z.lazy(() => SchemasCOULDNOTFINDRESOURCEContext$.inboundSchema).optional(),
            errorCode: z.string().default("COULD_NOT_FIND_RESOURCE"),
            message: z.string().default("Could not found resource."),
            path: z.string(),
            statusCode: z.number().default(404),
            timestamp: z.string(),
        })
        .transform((v) => {
            return new CouldNotFindResource({
                ...(v.RawResponse === undefined ? null : { rawResponse: v.RawResponse }),
                ...(v.RawResponse1 === undefined ? null : { rawResponse1: v.RawResponse1 }),
                ...(v.RawResponse10 === undefined ? null : { rawResponse10: v.RawResponse10 }),
                ...(v.RawResponse11 === undefined ? null : { rawResponse11: v.RawResponse11 }),
                ...(v.RawResponse12 === undefined ? null : { rawResponse12: v.RawResponse12 }),
                ...(v.RawResponse13 === undefined ? null : { rawResponse13: v.RawResponse13 }),
                ...(v.RawResponse14 === undefined ? null : { rawResponse14: v.RawResponse14 }),
                ...(v.RawResponse15 === undefined ? null : { rawResponse15: v.RawResponse15 }),
                ...(v.RawResponse16 === undefined ? null : { rawResponse16: v.RawResponse16 }),
                ...(v.RawResponse17 === undefined ? null : { rawResponse17: v.RawResponse17 }),
                ...(v.RawResponse18 === undefined ? null : { rawResponse18: v.RawResponse18 }),
                ...(v.RawResponse19 === undefined ? null : { rawResponse19: v.RawResponse19 }),
                ...(v.RawResponse2 === undefined ? null : { rawResponse2: v.RawResponse2 }),
                ...(v.RawResponse20 === undefined ? null : { rawResponse20: v.RawResponse20 }),
                ...(v.RawResponse21 === undefined ? null : { rawResponse21: v.RawResponse21 }),
                ...(v.RawResponse22 === undefined ? null : { rawResponse22: v.RawResponse22 }),
                ...(v.RawResponse23 === undefined ? null : { rawResponse23: v.RawResponse23 }),
                ...(v.RawResponse24 === undefined ? null : { rawResponse24: v.RawResponse24 }),
                ...(v.RawResponse25 === undefined ? null : { rawResponse25: v.RawResponse25 }),
                ...(v.RawResponse26 === undefined ? null : { rawResponse26: v.RawResponse26 }),
                ...(v.RawResponse27 === undefined ? null : { rawResponse27: v.RawResponse27 }),
                ...(v.RawResponse28 === undefined ? null : { rawResponse28: v.RawResponse28 }),
                ...(v.RawResponse29 === undefined ? null : { rawResponse29: v.RawResponse29 }),
                ...(v.RawResponse3 === undefined ? null : { rawResponse3: v.RawResponse3 }),
                ...(v.RawResponse30 === undefined ? null : { rawResponse30: v.RawResponse30 }),
                ...(v.RawResponse31 === undefined ? null : { rawResponse31: v.RawResponse31 }),
                ...(v.RawResponse32 === undefined ? null : { rawResponse32: v.RawResponse32 }),
                ...(v.RawResponse33 === undefined ? null : { rawResponse33: v.RawResponse33 }),
                ...(v.RawResponse34 === undefined ? null : { rawResponse34: v.RawResponse34 }),
                ...(v.RawResponse35 === undefined ? null : { rawResponse35: v.RawResponse35 }),
                ...(v.RawResponse36 === undefined ? null : { rawResponse36: v.RawResponse36 }),
                ...(v.RawResponse37 === undefined ? null : { rawResponse37: v.RawResponse37 }),
                ...(v.RawResponse38 === undefined ? null : { rawResponse38: v.RawResponse38 }),
                ...(v.RawResponse39 === undefined ? null : { rawResponse39: v.RawResponse39 }),
                ...(v.RawResponse4 === undefined ? null : { rawResponse4: v.RawResponse4 }),
                ...(v.RawResponse40 === undefined ? null : { rawResponse40: v.RawResponse40 }),
                ...(v.RawResponse5 === undefined ? null : { rawResponse5: v.RawResponse5 }),
                ...(v.RawResponse6 === undefined ? null : { rawResponse6: v.RawResponse6 }),
                ...(v.RawResponse7 === undefined ? null : { rawResponse7: v.RawResponse7 }),
                ...(v.RawResponse8 === undefined ? null : { rawResponse8: v.RawResponse8 }),
                ...(v.RawResponse9 === undefined ? null : { rawResponse9: v.RawResponse9 }),
                ...(v.context === undefined ? null : { context: v.context }),
                errorCode: v.errorCode,
                message: v.message,
                path: v.path,
                statusCode: v.statusCode,
                timestamp: v.timestamp,
            });
        });

    export type Outbound = {
        RawResponse?: never | undefined;
        RawResponse1?: never | undefined;
        RawResponse10?: never | undefined;
        RawResponse11?: never | undefined;
        RawResponse12?: never | undefined;
        RawResponse13?: never | undefined;
        RawResponse14?: never | undefined;
        RawResponse15?: never | undefined;
        RawResponse16?: never | undefined;
        RawResponse17?: never | undefined;
        RawResponse18?: never | undefined;
        RawResponse19?: never | undefined;
        RawResponse2?: never | undefined;
        RawResponse20?: never | undefined;
        RawResponse21?: never | undefined;
        RawResponse22?: never | undefined;
        RawResponse23?: never | undefined;
        RawResponse24?: never | undefined;
        RawResponse25?: never | undefined;
        RawResponse26?: never | undefined;
        RawResponse27?: never | undefined;
        RawResponse28?: never | undefined;
        RawResponse29?: never | undefined;
        RawResponse3?: never | undefined;
        RawResponse30?: never | undefined;
        RawResponse31?: never | undefined;
        RawResponse32?: never | undefined;
        RawResponse33?: never | undefined;
        RawResponse34?: never | undefined;
        RawResponse35?: never | undefined;
        RawResponse36?: never | undefined;
        RawResponse37?: never | undefined;
        RawResponse38?: never | undefined;
        RawResponse39?: never | undefined;
        RawResponse4?: never | undefined;
        RawResponse40?: never | undefined;
        RawResponse5?: never | undefined;
        RawResponse6?: never | undefined;
        RawResponse7?: never | undefined;
        RawResponse8?: never | undefined;
        RawResponse9?: never | undefined;
        context?: SchemasCOULDNOTFINDRESOURCEContext$.Outbound | undefined;
        errorCode: string;
        message: string;
        path: string;
        statusCode: number;
        timestamp: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CouldNotFindResource> = z
        .instanceof(CouldNotFindResource)
        .transform((v) => v.data$)
        .pipe(
            z
                .object({
                    rawResponse: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse1: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse10: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse11: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse12: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse13: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse14: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse15: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse16: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse17: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse18: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse19: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse2: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse20: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse21: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse22: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse23: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse24: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse25: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse26: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse27: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse28: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse29: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse3: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse30: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse31: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse32: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse33: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse34: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse35: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse36: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse37: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse38: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse39: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse4: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse40: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse5: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse6: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse7: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse8: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    rawResponse9: z
                        .instanceof(Response)
                        .transform(() => {
                            throw new Error("Response cannot be serialized");
                        })
                        .optional(),
                    context: z
                        .lazy(() => SchemasCOULDNOTFINDRESOURCEContext$.outboundSchema)
                        .optional(),
                    errorCode: z.string().default("COULD_NOT_FIND_RESOURCE"),
                    message: z.string().default("Could not found resource."),
                    path: z.string(),
                    statusCode: z.number().default(404),
                    timestamp: z.string(),
                })
                .transform((v) => {
                    return {
                        ...(v.rawResponse === undefined ? null : { RawResponse: v.rawResponse }),
                        ...(v.rawResponse1 === undefined ? null : { RawResponse1: v.rawResponse1 }),
                        ...(v.rawResponse10 === undefined
                            ? null
                            : { RawResponse10: v.rawResponse10 }),
                        ...(v.rawResponse11 === undefined
                            ? null
                            : { RawResponse11: v.rawResponse11 }),
                        ...(v.rawResponse12 === undefined
                            ? null
                            : { RawResponse12: v.rawResponse12 }),
                        ...(v.rawResponse13 === undefined
                            ? null
                            : { RawResponse13: v.rawResponse13 }),
                        ...(v.rawResponse14 === undefined
                            ? null
                            : { RawResponse14: v.rawResponse14 }),
                        ...(v.rawResponse15 === undefined
                            ? null
                            : { RawResponse15: v.rawResponse15 }),
                        ...(v.rawResponse16 === undefined
                            ? null
                            : { RawResponse16: v.rawResponse16 }),
                        ...(v.rawResponse17 === undefined
                            ? null
                            : { RawResponse17: v.rawResponse17 }),
                        ...(v.rawResponse18 === undefined
                            ? null
                            : { RawResponse18: v.rawResponse18 }),
                        ...(v.rawResponse19 === undefined
                            ? null
                            : { RawResponse19: v.rawResponse19 }),
                        ...(v.rawResponse2 === undefined ? null : { RawResponse2: v.rawResponse2 }),
                        ...(v.rawResponse20 === undefined
                            ? null
                            : { RawResponse20: v.rawResponse20 }),
                        ...(v.rawResponse21 === undefined
                            ? null
                            : { RawResponse21: v.rawResponse21 }),
                        ...(v.rawResponse22 === undefined
                            ? null
                            : { RawResponse22: v.rawResponse22 }),
                        ...(v.rawResponse23 === undefined
                            ? null
                            : { RawResponse23: v.rawResponse23 }),
                        ...(v.rawResponse24 === undefined
                            ? null
                            : { RawResponse24: v.rawResponse24 }),
                        ...(v.rawResponse25 === undefined
                            ? null
                            : { RawResponse25: v.rawResponse25 }),
                        ...(v.rawResponse26 === undefined
                            ? null
                            : { RawResponse26: v.rawResponse26 }),
                        ...(v.rawResponse27 === undefined
                            ? null
                            : { RawResponse27: v.rawResponse27 }),
                        ...(v.rawResponse28 === undefined
                            ? null
                            : { RawResponse28: v.rawResponse28 }),
                        ...(v.rawResponse29 === undefined
                            ? null
                            : { RawResponse29: v.rawResponse29 }),
                        ...(v.rawResponse3 === undefined ? null : { RawResponse3: v.rawResponse3 }),
                        ...(v.rawResponse30 === undefined
                            ? null
                            : { RawResponse30: v.rawResponse30 }),
                        ...(v.rawResponse31 === undefined
                            ? null
                            : { RawResponse31: v.rawResponse31 }),
                        ...(v.rawResponse32 === undefined
                            ? null
                            : { RawResponse32: v.rawResponse32 }),
                        ...(v.rawResponse33 === undefined
                            ? null
                            : { RawResponse33: v.rawResponse33 }),
                        ...(v.rawResponse34 === undefined
                            ? null
                            : { RawResponse34: v.rawResponse34 }),
                        ...(v.rawResponse35 === undefined
                            ? null
                            : { RawResponse35: v.rawResponse35 }),
                        ...(v.rawResponse36 === undefined
                            ? null
                            : { RawResponse36: v.rawResponse36 }),
                        ...(v.rawResponse37 === undefined
                            ? null
                            : { RawResponse37: v.rawResponse37 }),
                        ...(v.rawResponse38 === undefined
                            ? null
                            : { RawResponse38: v.rawResponse38 }),
                        ...(v.rawResponse39 === undefined
                            ? null
                            : { RawResponse39: v.rawResponse39 }),
                        ...(v.rawResponse4 === undefined ? null : { RawResponse4: v.rawResponse4 }),
                        ...(v.rawResponse40 === undefined
                            ? null
                            : { RawResponse40: v.rawResponse40 }),
                        ...(v.rawResponse5 === undefined ? null : { RawResponse5: v.rawResponse5 }),
                        ...(v.rawResponse6 === undefined ? null : { RawResponse6: v.rawResponse6 }),
                        ...(v.rawResponse7 === undefined ? null : { RawResponse7: v.rawResponse7 }),
                        ...(v.rawResponse8 === undefined ? null : { RawResponse8: v.rawResponse8 }),
                        ...(v.rawResponse9 === undefined ? null : { RawResponse9: v.rawResponse9 }),
                        ...(v.context === undefined ? null : { context: v.context }),
                        errorCode: v.errorCode,
                        message: v.message,
                        path: v.path,
                        statusCode: v.statusCode,
                        timestamp: v.timestamp,
                    };
                })
        );
}
